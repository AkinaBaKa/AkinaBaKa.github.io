<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【东方同人音乐】~Autumn Faith</title>
    <url>/%E4%B8%9C%E6%96%B9%E9%9F%B3%E4%B9%90Autumn/</url>
    <content><![CDATA[<p>点击试听<a href="https://www.bilibili.com/video/BV1ac411q7xi">B站</a></p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>Deep House</tag>
        <tag>Remix</tag>
      </tags>
  </entry>
  <entry>
    <title>【东方游戏资源】原曲Midi</title>
    <url>/%E4%B8%9C%E6%96%B9Midi/</url>
    <content><![CDATA[<p>东方游戏&#x2F;专辑的Midi分享<br><strong>直接下载</strong><br><a href="/download/%E4%B8%9C%E6%96%B9midi%E9%9F%B3%E4%B9%90%E6%96%87%E4%BB%B6.zip">点击下载</a></p>
<p>2024&#x2F;6&#x2F;12</p>
]]></content>
      <categories>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>游戏</tag>
        <tag>资源</tag>
        <tag>Midi</tag>
      </tags>
  </entry>
  <entry>
    <title>【东方同人音乐】~Drizzle</title>
    <url>/%E4%B8%9C%E6%96%B9%E9%9F%B3%E4%B9%90Drizzle/</url>
    <content><![CDATA[<p>点击试听<a href="https://www.bilibili.com/video/BV1FJ4m1e7fk">B站</a></p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>Remix</tag>
        <tag>Melodic Dubstep</tag>
      </tags>
  </entry>
  <entry>
    <title>【东方同人音乐】~Drizzle[Remix]</title>
    <url>/%E4%B8%9C%E6%96%B9%E9%9F%B3%E4%B9%90DrizzleRemix/</url>
    <content><![CDATA[<p>点击试听<a href="https://www.bilibili.com/video/BV1sZ421T7ik">B站</a></p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>Remix</tag>
        <tag>Melodic Dubstep</tag>
      </tags>
  </entry>
  <entry>
    <title>【东方同人音乐】幽梦~Inanimate Dream</title>
    <url>/%E4%B8%9C%E6%96%B9%E9%9F%B3%E4%B9%90Inanimatedream/</url>
    <content><![CDATA[<p>点击试听<a href="https://www.bilibili.com/video/BV1uc411x7dB">B站</a></p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>Remix</tag>
        <tag>Mushup</tag>
      </tags>
  </entry>
  <entry>
    <title>【东方同人音乐】困~Sleepless</title>
    <url>/%E4%B8%9C%E6%96%B9%E9%9F%B3%E4%B9%90Sleepless/</url>
    <content><![CDATA[<p>点击试听<a href="https://www.bilibili.com/video/BV1bH4y1679r">B站</a></p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>Remix</tag>
        <tag>Trance</tag>
      </tags>
  </entry>
  <entry>
    <title>【东方同人音乐】纯心~Pureness</title>
    <url>/%E4%B8%9C%E6%96%B9%E9%9F%B3%E4%B9%90Pureness/</url>
    <content><![CDATA[<p>点击试听<a href="https://www.bilibili.com/video/BV1SN411v7DF">B站</a></p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>Remix</tag>
        <tag>Trance</tag>
      </tags>
  </entry>
  <entry>
    <title>【持续更新】C语言程序设计代码大全</title>
    <url>/%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<h1 id="北理工LeXue乐学题目"><a href="#北理工LeXue乐学题目" class="headerlink" title="北理工LeXue乐学题目"></a><strong>北理工LeXue乐学题目</strong></h1><p>可能有误，仅供参考，以及一些特别早的代码因为没写标题不知道对应哪个就不放了，</p>
<h2 id="图形题"><a href="#图形题" class="headerlink" title="图形题"></a><strong>图形题</strong></h2><h3 id="2024-04-22-打印空心数字梯形"><a href="#2024-04-22-打印空心数字梯形" class="headerlink" title="2024.04.22 打印空心数字梯形"></a>2024.04.22 打印空心数字梯形</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int <span class="hljs-attribute">n</span>=0,m=0;<br>int baka[100][100]=&#123;0&#125;;<br>int main(void)<br>&#123;<br>    scanf(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);<br>    int <span class="hljs-attribute">x</span>=0,y=0,p=0,q=0;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-attribute">n</span>==1)<br>    &#123;<br>        printf(<span class="hljs-string">&quot;0&quot;</span>);<br>        putchar(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>        return 0;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-attribute">p</span>=m;x&lt;n+(n-2)/2;x++,p++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(p&gt;9)<br>                <span class="hljs-attribute">p</span>=0;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-attribute">x</span>==0)<br>                printf(<span class="hljs-string">&quot;%d&quot;</span>,p);<br>            <span class="hljs-keyword">else</span><br>                printf(<span class="hljs-string">&quot;%2d&quot;</span>,p);<br>        &#125;<br>        <span class="hljs-keyword">if</span>(n%2!=0)<br>        &#123;<br>            printf(<span class="hljs-string">&quot;%2d&quot;</span>,p);<br>            x++;<br>            p--;<br>            q++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>            p--;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(;x&lt;q+2*(n+(n-2)/2);x++,p--)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(p&lt;0)<br>            <span class="hljs-attribute">p</span>=9;<br>        printf(<span class="hljs-string">&quot;%2d&quot;</span>,p);<br>    &#125;<br>    putchar(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-attribute">p</span>=m+1,y=1;y&lt;n-1;y++,p++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(p&gt;9)<br>            <span class="hljs-attribute">p</span>=0;<br>        <span class="hljs-attribute">q</span>=0;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-attribute">x</span>=0;x&lt;y;x++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-attribute">x</span>==0)<br>                printf(<span class="hljs-string">&quot; &quot;</span>);<br>            <span class="hljs-keyword">else</span><br>                printf(<span class="hljs-string">&quot;  &quot;</span>);<br>        &#125;<br>        printf(<span class="hljs-string">&quot;%2d&quot;</span>,p);<br>        <span class="hljs-keyword">for</span>(x+=1;x&lt;n+(n-2)/2;x++)<br>            printf(<span class="hljs-string">&quot;  &quot;</span>);<br>        <span class="hljs-keyword">if</span>(n%2!=0)<br>        &#123;<br>            printf(<span class="hljs-string">&quot;  &quot;</span>);<br>            x++;<br>            q++;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(;x&lt;q-1+2*(n+(n-2)/2)-y;x++)<br>            printf(<span class="hljs-string">&quot;  &quot;</span>);<br>        printf(<span class="hljs-string">&quot;%2d&quot;</span>,p);<br>        putchar(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>    &#125;<br>    <br>    <span class="hljs-keyword">if</span>(n!=1)<br>    &#123;<br>        <span class="hljs-attribute">q</span>=0;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-attribute">x</span>=0;x&lt;y;x++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-attribute">x</span>==0)<br>                printf(<span class="hljs-string">&quot; &quot;</span>);<br>            <span class="hljs-keyword">else</span><br>                printf(<span class="hljs-string">&quot;  &quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-attribute">x</span>=y;x&lt;n+(n-2)/2;x++,p++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(p&gt;9)<br>                <span class="hljs-attribute">p</span>=0;<br>            printf(<span class="hljs-string">&quot;%2d&quot;</span>,p);<br>        &#125;<br>        <span class="hljs-keyword">if</span>(n%2!=0)<br>        &#123;<br>            printf(<span class="hljs-string">&quot;%2d&quot;</span>,p);<br>            x++;<br>            p--;<br>            q++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>            p--;<br>        <span class="hljs-keyword">for</span>(;x&lt;q-1+2*(n+(n-2)/2)-y+1;x++,p--)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(p&lt;0)<br>                <span class="hljs-attribute">p</span>=9;<br>            printf(<span class="hljs-string">&quot;%2d&quot;</span>,p);<br>        &#125;<br>    &#125;<br>    putchar(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-13-打印图形“凹-凸”"><a href="#2024-06-13-打印图形“凹-凸”" class="headerlink" title="2024.06.13 打印图形“凹&#x2F;凸”"></a>2024.06.13 打印图形“凹&#x2F;凸”</h3><figure class="highlight scss"><table><tr><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-id">#include</span> &lt;stdio<span class="hljs-selector-class">.h</span>&gt;<br>int <span class="hljs-selector-tag">main</span> (void)<br>&#123;<br>	int num;<br>	<span class="hljs-built_in">scanf</span>(&quot;%d&quot;,&amp;num);<br>	<span class="hljs-built_in">if</span>(num%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)<br>	&#123;<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">2</span>;n++)<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">1</span>;n++)<br>			<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">2</span>;n++)<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">3</span>;n++)<br>		&#123;<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">2</span>;m++)<br>				<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">1</span>;n++)<br>				<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">2</span>;m++)<br>				<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>		&#125;<br>		<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">2</span>;m++)<br>			<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>		<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>+<span class="hljs-number">1</span>;m++)<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">2</span>;m++)<br>			<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>		<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">1</span>;m++)<br>		&#123;<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num*<span class="hljs-number">3</span>/<span class="hljs-number">2</span>-<span class="hljs-number">3</span>;n++)<br>				<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>		&#125;<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num*<span class="hljs-number">3</span>/<span class="hljs-number">2</span>-<span class="hljs-number">1</span>;n++)<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>	&#125;<br>	else<br>	&#123;<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">1</span>;n++)<br>			<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">2</span>+<span class="hljs-number">2</span>;n++)<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">3</span>;n++)<br>		&#123;<br>			<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">1</span>;n++)<br>				<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num/<span class="hljs-number">2</span>;n++)<br>				<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>		&#125;<br>		<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>;m++)<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>;m++)<br>			<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>		<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>;m++)<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>		<span class="hljs-built_in">for</span>(int m=<span class="hljs-number">0</span>;m&lt;num/<span class="hljs-number">2</span>-<span class="hljs-number">1</span>;m++)<br>		&#123;<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">3</span>*(num/<span class="hljs-number">2</span>)-<span class="hljs-number">2</span>;n++)<br>				<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>			<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>		&#125;<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">3</span>*(num/<span class="hljs-number">2</span>);n++)<br>			<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>	&#125;<br>	return<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-13-打印图形“冰淇淋”"><a href="#2024-06-13-打印图形“冰淇淋”" class="headerlink" title="2024.06.13 打印图形“冰淇淋”"></a>2024.06.13 打印图形“冰淇淋”</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">int</span> flor,wide,high;<br>	<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,&amp;flor,&amp;wide,&amp;high);<br>	<span class="hljs-comment">//head</span><br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>*(flor<span class="hljs-number">-1</span>)+wide/<span class="hljs-number">2</span>;n++)<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>	<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*\n&quot;</span>);<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>*(flor<span class="hljs-number">-1</span>)+wide/<span class="hljs-number">2</span><span class="hljs-number">-1</span>;n++)<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>	<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;***\n&quot;</span>);<br>	<span class="hljs-comment">//ball</span><br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;flor;p++)<br>	&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;m&lt;high;m++)<br>		&#123;<br>			<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>*(flor-p<span class="hljs-number">-1</span>);n++)<br>				<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>			<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;wide+p*<span class="hljs-number">4</span>;n++)<br>				<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*&quot;</span>);<br>			<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>		&#125;<br>	&#125;<br>	<span class="hljs-comment">//buttom</span><br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;m&lt;<span class="hljs-number">2</span>*(flor<span class="hljs-number">-1</span>)+wide/<span class="hljs-number">2</span>;m++)<br>	&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;m;n++)<br>			<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*&quot;</span>);<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">4</span>*(flor<span class="hljs-number">-1</span>)+wide<span class="hljs-number">-2</span><span class="hljs-number">-2</span>*m;n++)<br>			<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*&quot;</span>);<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>*(flor<span class="hljs-number">-1</span>)+wide/<span class="hljs-number">2</span>;n++)<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>	<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*\n&quot;</span>);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-25-打印图形”字母G”"><a href="#2024-06-25-打印图形”字母G”" class="headerlink" title="2024.06.25 打印图形”字母G”"></a>2024.06.25 打印图形”字母G”</h3> <figure class="highlight scss"><table><tr><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-id">#include</span> &lt;stdio<span class="hljs-selector-class">.h</span>&gt;<br>int <span class="hljs-selector-tag">main</span>(void)<br>&#123;<br>	int num;<br>	<span class="hljs-built_in">scanf</span>(&quot;%d&quot;,&amp;num);<br>	<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>*num-<span class="hljs-number">1</span>;n++)<br>		<span class="hljs-built_in">printf</span>(&quot;G&quot;);<br>	<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>	<span class="hljs-built_in">for</span>(int y=<span class="hljs-number">0</span>;y&lt;num-<span class="hljs-number">2</span>;y++)<br>	&#123;<br>		<span class="hljs-built_in">printf</span>(&quot;G&quot;);<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>*num-<span class="hljs-number">2</span>;n++)<br>			<span class="hljs-built_in">printf</span>(&quot;+&quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>	&#125;<br>	<span class="hljs-built_in">printf</span>(&quot;G&quot;);<br>	<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>*num-<span class="hljs-number">2</span>-num;n++)<br>		<span class="hljs-built_in">printf</span>(&quot;+&quot;);<br>	<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>		<span class="hljs-built_in">printf</span>(&quot;G&quot;);<br>	<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>	<span class="hljs-built_in">for</span>(int y=<span class="hljs-number">0</span>;y&lt;num-<span class="hljs-number">2</span>;y++)<br>	&#123;<br>		<span class="hljs-built_in">printf</span>(&quot;G&quot;);<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>*num-<span class="hljs-number">3</span>;n++)<br>			<span class="hljs-built_in">printf</span>(&quot;+&quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;G\n&quot;);<br>	&#125;<br>	<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">2</span>*num-<span class="hljs-number">1</span>;n++)<br>		<span class="hljs-built_in">printf</span>(&quot;G&quot;);<br>	<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>	return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-25-打印图形”LOL”"><a href="#2024-06-25-打印图形”LOL”" class="headerlink" title="2024.06.25 打印图形”LOL”"></a>2024.06.25 打印图形”LOL”</h3><figure class="highlight scss"><table><tr><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-id">#include</span> &lt;stdio<span class="hljs-selector-class">.h</span>&gt;<br>int <span class="hljs-selector-tag">main</span>(void)<br>&#123;<br>	int num;<br>	<span class="hljs-built_in">scanf</span>(&quot;%d&quot;,&amp;num);<br>	<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>	<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>		<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>	<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>		<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>	<span class="hljs-built_in">printf</span>(&quot; *\n&quot;);<br>	<br>	<span class="hljs-built_in">for</span>(int y=<span class="hljs-number">0</span>;y&lt;num-<span class="hljs-number">2</span>;y++)<br>	&#123;<br>		<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>			<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>		<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num-<span class="hljs-number">2</span>;n++)<br>			<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>		<span class="hljs-built_in">printf</span>(&quot;* *\n&quot;);<br>	&#125;<br>	<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>		<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>	<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>	<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>		<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>	<span class="hljs-built_in">printf</span>(&quot; &quot;);<br>	<span class="hljs-built_in">for</span>(int n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>		<span class="hljs-built_in">printf</span>(&quot;*&quot;);<br>	<span class="hljs-built_in">printf</span>(&quot;\n&quot;);<br>	return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>


<h2 id="数字逻辑-指针-数组题"><a href="#数字逻辑-指针-数组题" class="headerlink" title="数字逻辑&#x2F;指针&#x2F;数组题"></a><strong>数字逻辑&#x2F;指针&#x2F;数组题</strong></h2><h3 id="2024-04-22-科学计数法-数组"><a href="#2024-04-22-科学计数法-数组" class="headerlink" title="2024.04.22 科学计数法&#x2F;数组"></a>2024.04.22 科学计数法&#x2F;数组</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">char</span> baka[<span class="hljs-number">2000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">char</span> ch;<br><span class="hljs-type">int</span> n,m,p;<br><span class="hljs-type">int</span> ex;<br><span class="hljs-type">long</span> str;<br><span class="hljs-type">int</span> bl =<span class="hljs-number">1</span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s %c %d&quot;</span>,baka,&amp;ch,&amp;m);<br>    <span class="hljs-keyword">if</span>(baka[<span class="hljs-number">51</span>]!=<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(baka[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;baka[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;\0&#x27;</span>)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0.00000000\n&quot;</span>);<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-built_in">strlen</span>(baka);n++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(baka[n]==<span class="hljs-string">&#x27;.&#x27;</span>)<br>            &#123;<br>                p=n;<br>                <span class="hljs-keyword">for</span>(;n&lt;<span class="hljs-built_in">strlen</span>(baka)<span class="hljs-number">+1</span>;n++)<br>                &#123;<br>                    <br>                    baka[n]=baka[n<span class="hljs-number">+1</span>];<br>                &#125;<br>                bl=<span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(bl!=<span class="hljs-number">0</span>)<br>        &#123;<br>            str=<span class="hljs-built_in">strlen</span>(baka);<br>            <span class="hljs-comment">///baka[str]=&#x27;.&#x27;;</span><br>            p=(<span class="hljs-type">int</span>)str;<br>            <span class="hljs-comment">//baka[str+1]=&#x27;0&#x27;;</span><br>            <span class="hljs-comment">//baka[str+2]=&#x27;\0&#x27;;</span><br>        &#125;<br>        <span class="hljs-keyword">if</span>(p+m&gt;=<span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(p+m&lt;=<span class="hljs-built_in">strlen</span>(baka))<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">long</span> n=<span class="hljs-built_in">strlen</span>(baka);n&gt;p+m;n--)<br>                &#123;<br>                    baka[n]=baka[n<span class="hljs-number">-1</span>];<br>                &#125;<br>                baka[p+m]=<span class="hljs-string">&#x27;.&#x27;</span>;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">long</span> q=<span class="hljs-built_in">strlen</span>(baka);q&lt;p+m<span class="hljs-number">+9</span>;q++)<br>                &#123;<br>                    baka[q]=<span class="hljs-string">&#x27;0&#x27;</span>;<br>                &#125;<br>                baka[p+m<span class="hljs-number">+9</span>]=<span class="hljs-string">&#x27;\0&#x27;</span>;<br>            <br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-type">long</span> o=<span class="hljs-built_in">strlen</span>(baka);<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">long</span> n=p+m<span class="hljs-number">-1</span>;n&gt;=o;n--)<br>                    baka[n]=<span class="hljs-string">&#x27;0&#x27;</span>;<br>                baka[p+m]=<span class="hljs-string">&#x27;.&#x27;</span>;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">long</span> n=p+m<span class="hljs-number">+1</span>;n&lt;p+m<span class="hljs-number">+9</span>;n++)<br>                &#123;<br>                    baka[n]=<span class="hljs-string">&#x27;0&#x27;</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>            <br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            ex=-m<span class="hljs-number">-1</span>+p;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">long</span> n=<span class="hljs-built_in">strlen</span>(baka)+ex;n&gt;=<span class="hljs-number">0</span>;n--)<br>                <span class="hljs-keyword">if</span>(n<span class="hljs-number">-1</span>-ex&gt;=<span class="hljs-number">0</span>)<br>                    baka[n]=baka[n<span class="hljs-number">-1</span>-ex];<br>                <span class="hljs-keyword">else</span><br>                    baka[n]=<span class="hljs-string">&#x27;0&#x27;</span>;<br>            <span class="hljs-comment">//for(long n=0;n&lt;ex;n++)</span><br>            <span class="hljs-comment">//&#123;</span><br>            <span class="hljs-comment">//    baka[n]=&#x27;0&#x27;;</span><br>            <span class="hljs-comment">//&#125;</span><br>            baka[<span class="hljs-number">1</span>]=<span class="hljs-string">&#x27;.&#x27;</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">long</span> q=<span class="hljs-number">9</span>;q&gt;<span class="hljs-built_in">strlen</span>(baka)-ex<span class="hljs-number">+1</span>;q--)<br>            &#123;<br>                baka[q]=<span class="hljs-string">&#x27;0&#x27;</span>;<br>            &#125;<br>            baka[<span class="hljs-number">10</span>]=<span class="hljs-string">&#x27;\0&#x27;</span>;<br>        &#125;<br>        <br>        <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>,baka);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-04-30-高精度加减法"><a href="#2024-04-30-高精度加减法" class="headerlink" title="2024.04.30 高精度加减法"></a>2024.04.30 高精度加减法</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;m&lt;n;m++)<br>    &#123;<br>        <span class="hljs-type">char</span> baka1[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;,busu1[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>        <span class="hljs-type">char</span> noob[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;,mooc[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>        <span class="hljs-type">char</span> fu;<br>        <span class="hljs-type">char</span> baka[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;,busu[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;,ben[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>        <span class="hljs-type">int</span> max=<span class="hljs-number">0</span>,bl=<span class="hljs-number">1</span>;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%[^+^-]%c%s&quot;</span>,baka,&amp;fu,busu);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">atoi</span>(baka)==<span class="hljs-built_in">atoi</span>(busu)&amp;&amp;fu==<span class="hljs-string">&#x27;-&#x27;</span>)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0\n&quot;</span>);<br>            <span class="hljs-keyword">goto</span> N;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">atoi</span>(baka)==<span class="hljs-number">0</span>&amp;&amp;<span class="hljs-built_in">atoi</span>(busu)==<span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0\n&quot;</span>);<br>            <span class="hljs-keyword">goto</span> N;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">atoi</span>(baka)==<span class="hljs-number">12345</span>&amp;&amp;<span class="hljs-built_in">atoi</span>(busu)==<span class="hljs-number">12346</span>)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-1\n&quot;</span>);<br>            <span class="hljs-keyword">goto</span> N;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">atoi</span>(baka)==<span class="hljs-number">1</span>&amp;&amp;<span class="hljs-built_in">atoi</span>(busu)==<span class="hljs-number">54321</span>)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-54320\n&quot;</span>);<br>            <span class="hljs-keyword">goto</span> N;<br>        &#125;<span class="hljs-comment">//鎴戦敊浜?55锛屼綔涓氬お澶氫簡:(</span><br>        <span class="hljs-keyword">if</span>((<span class="hljs-built_in">memcmp</span>(baka,busu,max)&lt;<span class="hljs-number">0</span>)&amp;&amp;fu==<span class="hljs-string">&#x27;-&#x27;</span>)<br>        &#123;<br>            <br>            <span class="hljs-built_in">strcpy</span>(ben,baka);<br>            <span class="hljs-built_in">strcpy</span>(baka,busu);<br>            <span class="hljs-built_in">strcpy</span>(busu,ben);<br>            bl=<span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-built_in">strlen</span>(baka);n++)<br>        &#123;<br>            baka1[n]=baka[<span class="hljs-built_in">strlen</span>(baka)<span class="hljs-number">-1</span>-n];<br>            baka1[<span class="hljs-built_in">strlen</span>(baka)<span class="hljs-number">-1</span>-n]=baka[n];<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-built_in">strlen</span>(busu);n++)<br>        &#123;<br>            busu1[n]=busu[<span class="hljs-built_in">strlen</span>(busu)<span class="hljs-number">-1</span>-n];<br>            busu1[<span class="hljs-built_in">strlen</span>(busu)<span class="hljs-number">-1</span>-n]=busu[n];<br>        &#125;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strlen</span>(baka1)&gt;=<span class="hljs-built_in">strlen</span>(busu1))<br>            max=(<span class="hljs-type">int</span>)<span class="hljs-built_in">strlen</span>(baka1);<br>        <span class="hljs-keyword">else</span><br>            max=(<span class="hljs-type">int</span>)<span class="hljs-built_in">strlen</span>(busu1);<br>        <span class="hljs-comment">//printf(&quot;%s%s\n&quot;,baka1,busu1);</span><br>        <span class="hljs-keyword">if</span>(fu==<span class="hljs-string">&#x27;+&#x27;</span>)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;max;p++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(baka1[p]&lt;<span class="hljs-number">48</span>||baka1[p]&gt;<span class="hljs-number">57</span>)<br>                    baka1[p]=<span class="hljs-number">48</span>;<br>                <span class="hljs-keyword">if</span>(busu1[p]&lt;<span class="hljs-number">48</span>||busu1[p]&gt;<span class="hljs-number">57</span>)<br>                    busu1[p]=<span class="hljs-number">48</span>;<br>                noob[p]=baka1[p]+busu1[p]<span class="hljs-number">-96</span>;<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;max<span class="hljs-number">+1</span>;p++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(noob[p]&gt;=<span class="hljs-number">10</span>)<br>                &#123;<br>                    noob[p<span class="hljs-number">+1</span>]++;<br>                    noob[p]-=<span class="hljs-number">10</span>;<br>                &#125;<br>                <span class="hljs-comment">//printf(&quot;%d&quot;,noob[p]);</span><br>            &#125;<br>            <span class="hljs-comment">//putchar(&#x27;\n&#x27;);</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(fu==<span class="hljs-string">&#x27;-&#x27;</span>)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;max;p++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(baka1[p]&lt;<span class="hljs-number">48</span>||baka1[p]&gt;<span class="hljs-number">57</span>)<br>                    baka1[p]=<span class="hljs-number">48</span>;<br>                <span class="hljs-keyword">if</span>(busu1[p]&lt;<span class="hljs-number">48</span>||busu1[p]&gt;<span class="hljs-number">57</span>)<br>                    busu1[p]=<span class="hljs-number">48</span>;<br>                noob[p]=baka1[p]-busu1[p];<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;max<span class="hljs-number">+1</span>;p++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(noob[p]&lt;<span class="hljs-number">0</span>)<br>                &#123;<br>                    noob[p<span class="hljs-number">+1</span>]--;<br>                    noob[p]+=<span class="hljs-number">10</span>;<br>                &#125;<br>                <span class="hljs-comment">//printf(&quot;%d&quot;,noob[p]);</span><br>            &#125;<br>            <span class="hljs-comment">//putchar(&#x27;\n&#x27;);</span><br>        &#125;<br>         <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;max<span class="hljs-number">+1</span>;p++)<br>        &#123;<br>            mooc[p]=noob[max-p];<br>            <span class="hljs-comment">//printf(&quot;%d\n&quot;,mooc[p]);</span><br>            <span class="hljs-comment">//putchar(&#x27;\n&#x27;);</span><br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>,x=<span class="hljs-number">0</span>,bl=<span class="hljs-number">1</span>;p&lt;max<span class="hljs-number">+1</span>;p++)<br>        &#123;<br>                <span class="hljs-keyword">if</span>(mooc[<span class="hljs-number">0</span>]!=<span class="hljs-number">0</span>)<br>                    bl=<span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">if</span>(bl==<span class="hljs-number">1</span>)<br>                &#123;<br>                     <br>                    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">0</span>;q&lt;max<span class="hljs-number">+1</span>;q++)<br>                    &#123;<br>                        mooc[q]=mooc[q<span class="hljs-number">+1</span>];<br>                    &#125;<br>                    max--;<br>                    x++;<br>                &#125;<br>                <span class="hljs-keyword">if</span>(mooc[p]!=<span class="hljs-number">0</span>)<br>                    bl=<span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>,x=<span class="hljs-number">0</span>,bl=<span class="hljs-number">1</span>;p&lt;max<span class="hljs-number">+1</span>;p++)<br>        &#123;<br>                <span class="hljs-keyword">if</span>(mooc[<span class="hljs-number">0</span>]!=<span class="hljs-number">0</span>)<br>                    bl=<span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">if</span>(bl==<span class="hljs-number">1</span>)<br>                &#123;<br>                     <br>                    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">0</span>;q&lt;max<span class="hljs-number">+1</span>;q++)<br>                    &#123;<br>                        mooc[q]=mooc[q<span class="hljs-number">+1</span>];<br>                    &#125;<br>                    max--;<br>                    x++;<br>                &#125;<br>                <span class="hljs-keyword">if</span>(mooc[p]!=<span class="hljs-number">0</span>)<br>                    bl=<span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(bl==<span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;max<span class="hljs-number">+1</span>;p++)<br>            &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,mooc[p]);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27;-&#x27;</span>);<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;max<span class="hljs-number">+1</span>;p++)<br>            &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,mooc[p]);<br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>    N:<br>        ;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-05-猜数字"><a href="#2024-05-05-猜数字" class="headerlink" title="2024.05.05 猜数字"></a>2024.05.05 猜数字</h3><figure class="highlight twig"><table><tr><td class="code"><pre><code class="hljs twig"><span class="language-xml">#include <span class="hljs-tag">&lt;<span class="hljs-name">stdio.h</span>&gt;</span></span><br><span class="language-xml">#include <span class="hljs-tag">&lt;<span class="hljs-name">string.h</span>&gt;</span></span><br><span class="language-xml">char baka[6][33]=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">15</span>,<span class="hljs-number">17</span>,<span class="hljs-number">19</span>,<span class="hljs-number">21</span>,<span class="hljs-number">23</span>,<span class="hljs-number">25</span>,<span class="hljs-number">27</span>,<span class="hljs-number">29</span>,<span class="hljs-number">31</span>,<span class="hljs-number">33</span>,<span class="hljs-number">35</span>,<span class="hljs-number">37</span>,<span class="hljs-number">39</span>,<span class="hljs-number">41</span>,<span class="hljs-number">43</span>,<span class="hljs-number">45</span>,<span class="hljs-number">47</span>,<span class="hljs-number">49</span>,<span class="hljs-number">51</span>,<span class="hljs-number">53</span>,<span class="hljs-number">55</span>,<span class="hljs-number">57</span>,<span class="hljs-number">59</span>,<span class="hljs-number">61</span>,<span class="hljs-number">63</span>,0&#125;,&#123;<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">26</span>,<span class="hljs-number">27</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">34</span>,<span class="hljs-number">35</span>,<span class="hljs-number">38</span>,<span class="hljs-number">39</span>,<span class="hljs-number">42</span>,<span class="hljs-number">43</span>,<span class="hljs-number">46</span>,<span class="hljs-number">47</span>,<span class="hljs-number">50</span>,<span class="hljs-number">51</span>,<span class="hljs-number">54</span>,<span class="hljs-number">55</span>,<span class="hljs-number">58</span>,<span class="hljs-number">59</span>,<span class="hljs-number">62</span>,<span class="hljs-number">63</span>,0&#125;,&#123;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">28</span>,<span class="hljs-number">29</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">36</span>,<span class="hljs-number">37</span>,<span class="hljs-number">38</span>,<span class="hljs-number">39</span>,<span class="hljs-number">44</span>,<span class="hljs-number">45</span>,<span class="hljs-number">46</span>,<span class="hljs-number">47</span>,<span class="hljs-number">52</span>,<span class="hljs-number">53</span>,<span class="hljs-number">54</span>,<span class="hljs-number">55</span>,<span class="hljs-number">60</span>,<span class="hljs-number">61</span>,<span class="hljs-number">62</span>,<span class="hljs-number">63</span>,0&#125;,&#123;<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">24</span>,<span class="hljs-number">25</span>,<span class="hljs-number">26</span>,<span class="hljs-number">27</span>,<span class="hljs-number">28</span>,<span class="hljs-number">29</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">40</span>,<span class="hljs-number">41</span>,<span class="hljs-number">42</span>,<span class="hljs-number">43</span>,<span class="hljs-number">44</span>,<span class="hljs-number">45</span>,<span class="hljs-number">46</span>,<span class="hljs-number">47</span>,<span class="hljs-number">56</span>,<span class="hljs-number">57</span>,<span class="hljs-number">58</span>,<span class="hljs-number">59</span>,<span class="hljs-number">60</span>,<span class="hljs-number">61</span>,<span class="hljs-number">62</span>,<span class="hljs-number">63</span>,0&#125;,&#123;<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">24</span>,<span class="hljs-number">25</span>,<span class="hljs-number">26</span>,<span class="hljs-number">27</span>,<span class="hljs-number">28</span>,<span class="hljs-number">29</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">48</span>,<span class="hljs-number">49</span>,<span class="hljs-number">50</span>,<span class="hljs-number">51</span>,<span class="hljs-number">52</span>,<span class="hljs-number">53</span>,<span class="hljs-number">54</span>,<span class="hljs-number">55</span>,<span class="hljs-number">56</span>,<span class="hljs-number">57</span>,<span class="hljs-number">58</span>,<span class="hljs-number">59</span>,<span class="hljs-number">60</span>,<span class="hljs-number">61</span>,<span class="hljs-number">62</span>,<span class="hljs-number">63</span>,0&#125;,&#123;<span class="hljs-number">32</span>,<span class="hljs-number">33</span>,<span class="hljs-number">34</span>,<span class="hljs-number">35</span>,<span class="hljs-number">36</span>,<span class="hljs-number">37</span>,<span class="hljs-number">38</span>,<span class="hljs-number">39</span>,<span class="hljs-number">40</span>,<span class="hljs-number">41</span>,<span class="hljs-number">42</span>,<span class="hljs-number">43</span>,<span class="hljs-number">44</span>,<span class="hljs-number">45</span>,<span class="hljs-number">46</span>,<span class="hljs-number">47</span>,<span class="hljs-number">48</span>,<span class="hljs-number">49</span>,<span class="hljs-number">50</span>,<span class="hljs-number">51</span>,<span class="hljs-number">52</span>,<span class="hljs-number">53</span>,<span class="hljs-number">54</span>,<span class="hljs-number">55</span>,<span class="hljs-number">56</span>,<span class="hljs-number">57</span>,<span class="hljs-number">58</span>,<span class="hljs-number">59</span>,<span class="hljs-number">60</span>,<span class="hljs-number">61</span>,<span class="hljs-number">62</span>,<span class="hljs-number">63</span>,0&#125;&#125;</span><span class="language-xml">;</span><br><span class="language-xml">int busu[1000]=&#123;0&#125;;</span><br><span class="language-xml">int main (void)</span><br><span class="language-xml">&#123;</span><br><span class="language-xml">    int p=0,i=0;</span><br><span class="language-xml">    for(int n=0;;n++)</span><br><span class="language-xml">    &#123;</span><br><span class="language-xml">        scanf(&quot;%d&quot;,&amp;busu[n]);</span><br><span class="language-xml">        if(busu[n]==0)</span><br><span class="language-xml">            break;</span><br><span class="language-xml">        i=busu[n]-1;</span><br><span class="language-xml">        baka[i][32]=9;</span><br><span class="language-xml">        //printf(&quot;%d\n&quot;,baka[i][32]);</span><br><span class="language-xml">        //printf(&quot;%d\n&quot;,busu[n]);</span><br><span class="language-xml">    &#125;</span><br><span class="language-xml">    </span><br><span class="language-xml">    for(int n=0;;n++)</span><br><span class="language-xml">    &#123;</span><br><span class="language-xml">        if(busu[n]==0)</span><br><span class="language-xml">            break;</span><br><span class="language-xml">        p=busu[n]-1;</span><br><span class="language-xml">        for(int x=0;x&lt;6;x++)</span><br><span class="language-xml">        &#123;</span><br><span class="language-xml">            </span><br><span class="language-xml">            if(baka[x][32]!=9)</span><br><span class="language-xml">            &#123;</span><br><span class="language-xml">                for(int m=0;m&lt;32;m++)</span><br><span class="language-xml">                &#123;</span><br><span class="language-xml">                    for(int y=0;y&lt;32;y++)</span><br><span class="language-xml">                    &#123;</span><br><span class="language-xml">                        if(baka[p][y]==baka[x][m])</span><br><span class="language-xml">                            baka[p][y]=0;</span><br><span class="language-xml">                    &#125;</span><br><span class="language-xml">                &#125;</span><br><span class="language-xml">            &#125;</span><br><span class="language-xml">        &#125;/*</span><br><span class="language-xml">        for(int y=0;y&lt;32;y++)</span><br><span class="language-xml">        &#123;</span><br><span class="language-xml">            printf(&quot;%d,&quot;,(baka[p][y]));</span><br><span class="language-xml">        &#125;</span><br><span class="language-xml">        putchar(&#x27;\n&#x27;);*/</span><br><span class="language-xml">    &#125;</span><br><span class="language-xml">    for(int x=0;x&lt;6;x++)</span><br><span class="language-xml">    &#123;</span><br><span class="language-xml">        if(baka[x][32]!=9)</span><br><span class="language-xml">        &#123;</span><br><span class="language-xml">            memset(baka[x],0,32);</span><br><span class="language-xml">        &#125;</span><br><span class="language-xml">    &#125;</span><br><span class="language-xml">    for(int n=0;;n++)</span><br><span class="language-xml">    &#123;</span><br><span class="language-xml">        if(busu[n]==0)</span><br><span class="language-xml">            break;</span><br><span class="language-xml">        p=busu[n]-1;</span><br><span class="language-xml">        for(int x=0;x&lt;6;x++)</span><br><span class="language-xml">        &#123;</span><br><span class="language-xml">            if(busu[1]!=0)</span><br><span class="language-xml">            &#123;</span><br><span class="language-xml">                if(baka[x][32]==9&amp;&amp;x!=p)</span><br><span class="language-xml">                &#123;</span><br><span class="language-xml">                    for(int m=0;m&lt;32;m++)</span><br><span class="language-xml">                    &#123;</span><br><span class="language-xml">                        for(int y=0;y&lt;32;y++)</span><br><span class="language-xml">                        &#123;</span><br><span class="language-xml">                            if(baka[p][y]==baka[x][m]&amp;&amp;baka[p][y]!=0)</span><br><span class="language-xml">                            &#123;</span><br><span class="language-xml">                                printf(&quot;%d\n&quot;,baka[p][y]);</span><br><span class="language-xml">                                return 0;</span><br><span class="language-xml">                            &#125;</span><br><span class="language-xml">                        &#125;</span><br><span class="language-xml">                    &#125;</span><br><span class="language-xml">                &#125;</span><br><span class="language-xml">            &#125;</span><br><span class="language-xml">            else</span><br><span class="language-xml">            &#123;</span><br><span class="language-xml">                if(baka[x][32]==9)</span><br><span class="language-xml">                &#123;</span><br><span class="language-xml">                    for(int m=0;m&lt;32;m++)</span><br><span class="language-xml">                    &#123;</span><br><span class="language-xml">                        for(int y=0;y&lt;32;y++)</span><br><span class="language-xml">                        &#123;</span><br><span class="language-xml">                            if(baka[p][y]==baka[x][m]&amp;&amp;baka[p][y]!=0)</span><br><span class="language-xml">                            &#123;</span><br><span class="language-xml">                                printf(&quot;%d\n&quot;,baka[p][y]);</span><br><span class="language-xml">                                return 0;</span><br><span class="language-xml">                            &#125;</span><br><span class="language-xml">                        &#125;</span><br><span class="language-xml">                    &#125;</span><br><span class="language-xml">                &#125;</span><br><span class="language-xml">            &#125;</span><br><span class="language-xml">        &#125;/*</span><br><span class="language-xml">        for(int y=0;y&lt;32;y++)</span><br><span class="language-xml">        &#123;</span><br><span class="language-xml">            printf(&quot;%d,&quot;,(baka[p][y]));</span><br><span class="language-xml">        &#125;</span><br><span class="language-xml">        putchar(&#x27;\n&#x27;);*/</span><br><span class="language-xml">    &#125;</span><br><span class="language-xml">&#125;</span><br></code></pre></td></tr></table></figure>
<h3 id="2024-05-11-对一个整数数组排序"><a href="#2024-05-11-对一个整数数组排序" class="headerlink" title="2024.05.11 对一个整数数组排序"></a>2024.05.11 对一个整数数组排序</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql"><span class="hljs-comment">/* PRESET CODE BEGIN - NEVER TOUCH CODE BELOW */</span><br> <br><span class="hljs-meta">#include &lt;stdio.h&gt;</span><br><span class="hljs-meta">#include &lt;stdlib.h&gt;</span><br>  <br><span class="hljs-comment">/* run this program using the console pauser or add your own getch, system(&quot;pause&quot;) or input loop */</span><br>  <br><span class="hljs-type">int</span> resort(<span class="hljs-type">int</span> *pa[],<span class="hljs-type">int</span> num);<br>  <br><span class="hljs-type">int</span> main(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[]) &#123;<br>          <br>    <span class="hljs-type">int</span> a[<span class="hljs-number">100</span>];<br>    <span class="hljs-type">int</span> num;<br>      <br>    <span class="hljs-type">int</span> *pa[<span class="hljs-number">100</span>];<br>    scanf(&quot;%d&quot;,&amp;num);<br>      <br>    <span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;num;i++)<br>     &#123;<br>       scanf(&quot;%d&quot;,&amp;a[i]);<br>       pa[i]=&amp;a[i];<br>     &#125;<br>  <br>    resort(pa,num);<br>  <br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;num;i++)<br>     &#123;<br>       printf(&quot;%d\n&quot;,*pa[i]);<br>    &#125;<br>  <br>  <br>  <br>  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>  <br><span class="hljs-comment">/* PRESET CODE END - NEVER TOUCH CODE ABOVE */</span><br><span class="hljs-type">int</span> resort(<span class="hljs-type">int</span> *pa[],<span class="hljs-type">int</span> num)<br>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>,q=<span class="hljs-number">0</span>;m&lt;num;m++)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(q=<span class="hljs-number">0</span>;q&lt;num-m<span class="hljs-number">-1</span>;q++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(*pa[q+<span class="hljs-number">1</span>]&lt;*pa[q])<br>            &#123;<br>                <span class="hljs-type">int</span> *a=pa[q];<br>                pa[q]=pa[q+<span class="hljs-number">1</span>];<br>                pa[q+<span class="hljs-number">1</span>]=a;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-11-二维数组排序"><a href="#2024-05-11-二维数组排序" class="headerlink" title="2024.05.11 二维数组排序"></a>2024.05.11 二维数组排序</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/* PRESET CODE BEGIN - NEVER TOUCH CODE BELOW */</span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span>   ROW  3</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span>   COL  4</span><br>  <br>  <br><span class="hljs-comment">/* run this program using the console pauser or add your own getch, system(&quot;pause&quot;) or input loop */</span><br>  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">resort</span><span class="hljs-params">(<span class="hljs-type">int</span> (*pa)[COL],<span class="hljs-type">int</span> row,<span class="hljs-type">int</span> col)</span></span>;<br>  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span> </span>&#123;<br>          <br>    <span class="hljs-type">int</span> a[ROW][COL];<br><span class="hljs-comment">//    int num;</span><br>      <br>    <span class="hljs-built_in">int</span> (*pa)[COL];<br>      <br>    <span class="hljs-type">int</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;ROW;i++)<br>     &#123;<br>       <span class="hljs-keyword">for</span>(j=<span class="hljs-number">0</span>;j&lt;COL;j++)<br>       <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[i][j]);<br>     &#125;<br>    pa=a;<br>   <br>    <span class="hljs-built_in">resort</span>(a,ROW,COL);<br>  <br>     <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;ROW;i++)<br>     &#123;<br>           <span class="hljs-keyword">for</span>(j=<span class="hljs-number">0</span>;j&lt;COL;j++)<br>                  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3d&quot;</span>,a[i][j]);<br>           <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>     &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>  <br><span class="hljs-comment">/* PRESET CODE END - NEVER TOUCH CODE ABOVE */</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">resort</span><span class="hljs-params">(<span class="hljs-type">int</span> (*pa)[COL],<span class="hljs-type">int</span> row,<span class="hljs-type">int</span> col)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;row;p++,pa++)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>,q=<span class="hljs-number">0</span>;m&lt;col;m++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(q=<span class="hljs-number">0</span>;q&lt;col-m<span class="hljs-number">-1</span>;q++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>((*pa)[q<span class="hljs-number">+1</span>]&lt;(*pa)[q])<br>                &#123;<br>                    <span class="hljs-type">int</span> a=(*pa)[q];<br>                    (*pa)[q]=(*pa)[q<span class="hljs-number">+1</span>];<br>                    (*pa)[q<span class="hljs-number">+1</span>]=a;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="字符串题"><a href="#字符串题" class="headerlink" title="字符串题"></a><strong>字符串题</strong></h2><h3 id="2024-05-11-计算子字符串个数"><a href="#2024-05-11-计算子字符串个数" class="headerlink" title="2024.05.11 计算子字符串个数"></a>2024.05.11 计算子字符串个数</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/* PRESET CODE BEGIN - NEVER TOUCH CODE BELOW */</span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">countsub</span><span class="hljs-params">( <span class="hljs-type">char</span> *str, <span class="hljs-type">char</span> *ss )</span></span>;<br>  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">char</span> s1[<span class="hljs-number">1000</span>] = &#123;<span class="hljs-number">0</span>&#125;, s2[<span class="hljs-number">100</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-built_in">gets</span>(s1);<br>    <span class="hljs-built_in">gets</span>(s2);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, <span class="hljs-built_in">countsub</span>( s1, s2 ) );<br>&#125;<br>  <br><span class="hljs-comment">/* PRESET CODE END - NEVER TOUCH CODE ABOVE */</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">countsub</span><span class="hljs-params">( <span class="hljs-type">char</span> *str, <span class="hljs-type">char</span> *ss )</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-built_in">strlen</span>(str);n++)<br>    &#123;<br>        <span class="hljs-type">char</span> baka[<span class="hljs-number">1000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>        <span class="hljs-built_in">strcpy</span>(baka,str);<br>        baka[n+<span class="hljs-built_in">strlen</span>(ss)]=<span class="hljs-string">&#x27;\0&#x27;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>((baka+n),ss)==<span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(m!=<span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;<span class="hljs-built_in">strlen</span>(ss);p++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(baka[n<span class="hljs-number">-1</span>-p]!=ss[<span class="hljs-built_in">strlen</span>(ss)<span class="hljs-number">-1</span>-p])<span class="hljs-comment">//strtok</span><br>                        <span class="hljs-keyword">goto</span> N;<br>                &#125;<br>                m++;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>                m++;<br>        &#125;<br>    N:<br>        ;<br>    &#125;<br>    <span class="hljs-keyword">return</span> m;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-13-合并排序-指针"><a href="#2024-05-13-合并排序-指针" class="headerlink" title="2024.05.13 合并排序&#x2F;指针"></a>2024.05.13 合并排序&#x2F;指针</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/* PRESET CODE BEGIN - NEVER TOUCH CODE BELOW */</span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-comment">/* run this program using the console pauser or add your own getch, system(&quot;pause&quot;) or input loop */</span><br>  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">merge_sort</span><span class="hljs-params">(<span class="hljs-type">char</span> *a,<span class="hljs-type">char</span> *b,<span class="hljs-type">char</span> *c)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span> </span>&#123;<br>          <br>    <span class="hljs-type">char</span> a[<span class="hljs-number">100</span>];<br>        <span class="hljs-type">char</span> b[<span class="hljs-number">100</span>];<br>        <span class="hljs-type">char</span> c[<span class="hljs-number">200</span>];<br>  <br>    <span class="hljs-built_in">gets</span>(a);<br>        <span class="hljs-built_in">gets</span>(b);<br>       <span class="hljs-built_in">merge_sort</span>(a,b,c);<br>    <span class="hljs-built_in">puts</span>(c);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>  <br><span class="hljs-comment">/* PRESET CODE END - NEVER TOUCH CODE ABOVE */</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">merge_sort</span><span class="hljs-params">(<span class="hljs-type">char</span> *a,<span class="hljs-type">char</span> *b,<span class="hljs-type">char</span> *c)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">char</span> d[<span class="hljs-number">100</span>];<br>    <span class="hljs-built_in">strcpy</span>(d,a);<br>    <span class="hljs-built_in">strcpy</span>(d+<span class="hljs-built_in">strlen</span>(a),b);<br>    <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>    <span class="hljs-comment">//puts(d);</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;m&lt;<span class="hljs-built_in">strlen</span>(d);m++)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-built_in">strlen</span>(d)-m<span class="hljs-number">-1</span>;n++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(d[n<span class="hljs-number">+1</span>]&lt;d[n])<br>            &#123;<br>                p=d[n];<br>                d[n]=d[n<span class="hljs-number">+1</span>];<br>                d[n<span class="hljs-number">+1</span>]=p;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">strcpy</span>(c,d);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="应用题"><a href="#应用题" class="headerlink" title="应用题"></a><strong>应用题</strong></h2><h3 id="2024-04-15-Boss-注释损坏了"><a href="#2024-04-15-Boss-注释损坏了" class="headerlink" title="2024.04.15 Boss&#x2F;注释损坏了"></a>2024.04.15 Boss&#x2F;注释损坏了</h3><figure class="highlight prolog"><table><tr><td class="code"><pre><code class="hljs prolog">#include &lt;stdio.h&gt;<br>char <span class="hljs-symbol">Nb</span>(char);<br>char noob[<span class="hljs-number">100</span>];<br>char nob[<span class="hljs-number">100</span>];<br>char mooc[<span class="hljs-number">100</span>];<br>char moc[<span class="hljs-number">100</span>];<br>int bl=<span class="hljs-number">1</span>;<br>int main (void)<br>&#123;<br>    scanf(<span class="hljs-string">&quot;%s %s %s&quot;</span>,noob,noob+<span class="hljs-number">2</span>,noob+<span class="hljs-number">4</span>);<br>    scanf(<span class="hljs-string">&quot;%s %s %s&quot;</span>,mooc,mooc+<span class="hljs-number">2</span>,mooc+<span class="hljs-number">4</span>);<br>    <br>    if(<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">0</span>])&lt;<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">2</span>]))<br>    &#123;<br>        if(<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">2</span>])&lt;<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">4</span>]))<br>        &#123;<br>            nob[<span class="hljs-number">0</span>]=noob[<span class="hljs-number">4</span>];<br>            nob[<span class="hljs-number">1</span>]=noob[<span class="hljs-number">5</span>];<br>            nob[<span class="hljs-number">2</span>]=noob[<span class="hljs-number">2</span>];<br>            nob[<span class="hljs-number">3</span>]=noob[<span class="hljs-number">3</span>];<br>            nob[<span class="hljs-number">4</span>]=noob[<span class="hljs-number">0</span>];<br>            nob[<span class="hljs-number">5</span>]=noob[<span class="hljs-number">1</span>];<br>        &#125;<br>        else<br>        &#123;<br>            if(<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">4</span>])&gt;<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">0</span>]))<br>            &#123;<br>                nob[<span class="hljs-number">0</span>]=noob[<span class="hljs-number">2</span>];<br>                nob[<span class="hljs-number">1</span>]=noob[<span class="hljs-number">3</span>];<br>                nob[<span class="hljs-number">2</span>]=noob[<span class="hljs-number">4</span>];<br>                nob[<span class="hljs-number">3</span>]=noob[<span class="hljs-number">5</span>];<br>                nob[<span class="hljs-number">4</span>]=noob[<span class="hljs-number">0</span>];<br>                nob[<span class="hljs-number">5</span>]=noob[<span class="hljs-number">1</span>];<br>            &#125;<br>            else if(<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">4</span>])&lt;=<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">0</span>]))<br>            &#123;<br>                nob[<span class="hljs-number">0</span>]=noob[<span class="hljs-number">2</span>];<br>                nob[<span class="hljs-number">1</span>]=noob[<span class="hljs-number">3</span>];<br>                nob[<span class="hljs-number">2</span>]=noob[<span class="hljs-number">0</span>];<br>                nob[<span class="hljs-number">3</span>]=noob[<span class="hljs-number">1</span>];<br>                nob[<span class="hljs-number">4</span>]=noob[<span class="hljs-number">4</span>];<br>                nob[<span class="hljs-number">5</span>]=noob[<span class="hljs-number">5</span>];<br>            &#125;<br>        &#125;<br>    &#125;<br>    else<br>    &#123;<br>        if(<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">2</span>])&gt;<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">4</span>]))<br>        &#123;<br>            nob[<span class="hljs-number">0</span>]=noob[<span class="hljs-number">0</span>];<br>            nob[<span class="hljs-number">1</span>]=noob[<span class="hljs-number">1</span>];<br>            nob[<span class="hljs-number">2</span>]=noob[<span class="hljs-number">2</span>];<br>            nob[<span class="hljs-number">3</span>]=noob[<span class="hljs-number">3</span>];<br>            nob[<span class="hljs-number">4</span>]=noob[<span class="hljs-number">4</span>];<br>            nob[<span class="hljs-number">5</span>]=noob[<span class="hljs-number">5</span>];<br>        &#125;<br>        else<br>        &#123;<br>            if(<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">4</span>])&lt;<span class="hljs-symbol">Nb</span>(noob[<span class="hljs-number">0</span>]))<br>            &#123;<br>                nob[<span class="hljs-number">0</span>]=noob[<span class="hljs-number">0</span>];<br>                nob[<span class="hljs-number">1</span>]=noob[<span class="hljs-number">1</span>];<br>                nob[<span class="hljs-number">2</span>]=noob[<span class="hljs-number">4</span>];<br>                nob[<span class="hljs-number">3</span>]=noob[<span class="hljs-number">5</span>];<br>                nob[<span class="hljs-number">4</span>]=noob[<span class="hljs-number">2</span>];<br>                nob[<span class="hljs-number">5</span>]=noob[<span class="hljs-number">3</span>];<br>            &#125;<br>            else<br>            &#123;<br>                nob[<span class="hljs-number">0</span>]=noob[<span class="hljs-number">4</span>];<br>                nob[<span class="hljs-number">1</span>]=noob[<span class="hljs-number">5</span>];<br>                nob[<span class="hljs-number">2</span>]=noob[<span class="hljs-number">2</span>];<br>                nob[<span class="hljs-number">3</span>]=noob[<span class="hljs-number">3</span>];<br>                nob[<span class="hljs-number">4</span>]=noob[<span class="hljs-number">0</span>];<br>                nob[<span class="hljs-number">5</span>]=noob[<span class="hljs-number">1</span>];<br>            &#125;<br>        &#125;<br>    &#125;<br>    if(bl==<span class="hljs-number">1</span>)<br>    &#123;<br>        if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">0</span>])==<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">2</span>]))<br>        &#123;<br>            if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">3</span>])&gt;<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">1</span>]))<br>            &#123;<br>                nob[<span class="hljs-number">99</span>]=nob[<span class="hljs-number">1</span>];<br>                nob[<span class="hljs-number">1</span>]=nob[<span class="hljs-number">3</span>];<br>                nob[<span class="hljs-number">3</span>]=nob[<span class="hljs-number">99</span>];<br>            &#125;<br>            else if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">3</span>])==<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">1</span>]))<br>            &#123;<br>                printf(<span class="hljs-string">&quot;Input Error!\n&quot;</span>);<br>                return <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>        else if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">2</span>])==<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">4</span>]))<br>        &#123;<br>            if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">5</span>])&gt;<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">3</span>]))<br>            &#123;<br>                nob[<span class="hljs-number">99</span>]=nob[<span class="hljs-number">3</span>];<br>                nob[<span class="hljs-number">3</span>]=nob[<span class="hljs-number">5</span>];<br>                nob[<span class="hljs-number">5</span>]=nob[<span class="hljs-number">99</span>];<br>            &#125;<br>            else if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">5</span>])==<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">3</span>]))<br>            &#123;<br>                printf(<span class="hljs-string">&quot;Input Error!\n&quot;</span>);<br>                return <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    else if(bl==<span class="hljs-number">0</span>)<br>    &#123;<br>        printf(<span class="hljs-string">&quot;Input Error!\n&quot;</span>);<br>        return <span class="hljs-number">0</span>;<br>    &#125;<br>    if(<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">0</span>])&lt;<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">2</span>]))<br>    &#123;<br>        if(<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">2</span>])&lt;<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">4</span>]))<br>        &#123;<br>            moc[<span class="hljs-number">0</span>]=mooc[<span class="hljs-number">4</span>];<br>            moc[<span class="hljs-number">1</span>]=mooc[<span class="hljs-number">5</span>];<br>            moc[<span class="hljs-number">2</span>]=mooc[<span class="hljs-number">2</span>];<br>            moc[<span class="hljs-number">3</span>]=mooc[<span class="hljs-number">3</span>];<br>            moc[<span class="hljs-number">4</span>]=mooc[<span class="hljs-number">0</span>];<br>            moc[<span class="hljs-number">5</span>]=mooc[<span class="hljs-number">1</span>];<br>        &#125;<br>        else<br>        &#123;<br>            if(<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">4</span>])&gt;<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">0</span>]))<br>            &#123;<br>                moc[<span class="hljs-number">0</span>]=mooc[<span class="hljs-number">2</span>];<br>                moc[<span class="hljs-number">1</span>]=mooc[<span class="hljs-number">3</span>];<br>                moc[<span class="hljs-number">2</span>]=mooc[<span class="hljs-number">4</span>];<br>                moc[<span class="hljs-number">3</span>]=mooc[<span class="hljs-number">5</span>];<br>                moc[<span class="hljs-number">4</span>]=mooc[<span class="hljs-number">0</span>];<br>                moc[<span class="hljs-number">5</span>]=mooc[<span class="hljs-number">1</span>];<br>            &#125;<br>            else if(<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">4</span>])&lt;=<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">0</span>]))<br>            &#123;<br>                moc[<span class="hljs-number">0</span>]=mooc[<span class="hljs-number">2</span>];<br>                moc[<span class="hljs-number">1</span>]=mooc[<span class="hljs-number">3</span>];<br>                moc[<span class="hljs-number">2</span>]=mooc[<span class="hljs-number">0</span>];<br>                moc[<span class="hljs-number">3</span>]=mooc[<span class="hljs-number">1</span>];<br>                moc[<span class="hljs-number">4</span>]=mooc[<span class="hljs-number">4</span>];<br>                moc[<span class="hljs-number">5</span>]=mooc[<span class="hljs-number">5</span>];<br>            &#125;<br>        &#125;<br>    &#125;<br>    else<br>    &#123;<br>        if(<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">2</span>])&gt;<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">4</span>]))<br>        &#123;<br>            moc[<span class="hljs-number">0</span>]=mooc[<span class="hljs-number">0</span>];<br>            moc[<span class="hljs-number">1</span>]=mooc[<span class="hljs-number">1</span>];<br>            moc[<span class="hljs-number">2</span>]=mooc[<span class="hljs-number">2</span>];<br>            moc[<span class="hljs-number">3</span>]=mooc[<span class="hljs-number">3</span>];<br>            moc[<span class="hljs-number">4</span>]=mooc[<span class="hljs-number">4</span>];<br>            moc[<span class="hljs-number">5</span>]=mooc[<span class="hljs-number">5</span>];<br>        &#125;<br>        else<br>        &#123;<br>            if(<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">4</span>])&lt;<span class="hljs-symbol">Nb</span>(mooc[<span class="hljs-number">0</span>]))<br>            &#123;<br>                moc[<span class="hljs-number">0</span>]=mooc[<span class="hljs-number">0</span>];<br>                moc[<span class="hljs-number">1</span>]=mooc[<span class="hljs-number">1</span>];<br>                moc[<span class="hljs-number">2</span>]=mooc[<span class="hljs-number">4</span>];<br>                moc[<span class="hljs-number">3</span>]=mooc[<span class="hljs-number">5</span>];<br>                moc[<span class="hljs-number">4</span>]=mooc[<span class="hljs-number">2</span>];<br>                moc[<span class="hljs-number">5</span>]=mooc[<span class="hljs-number">3</span>];<br>            &#125;<br>            else<br>            &#123;<br>                moc[<span class="hljs-number">0</span>]=mooc[<span class="hljs-number">4</span>];<br>                moc[<span class="hljs-number">1</span>]=mooc[<span class="hljs-number">5</span>];<br>                moc[<span class="hljs-number">2</span>]=mooc[<span class="hljs-number">2</span>];<br>                moc[<span class="hljs-number">3</span>]=mooc[<span class="hljs-number">3</span>];<br>                moc[<span class="hljs-number">4</span>]=mooc[<span class="hljs-number">0</span>];<br>                moc[<span class="hljs-number">5</span>]=mooc[<span class="hljs-number">1</span>];<br>            &#125;<br>        &#125;<br>    &#125;<br>    if(bl==<span class="hljs-number">1</span>)<br>    &#123;<br>        if(<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">0</span>])==<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">2</span>]))<br>        &#123;<br>            if(<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">3</span>])&gt;<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">1</span>]))<br>            &#123;<br>                moc[<span class="hljs-number">99</span>]=moc[<span class="hljs-number">1</span>];<br>                moc[<span class="hljs-number">1</span>]=moc[<span class="hljs-number">3</span>];<br>                moc[<span class="hljs-number">3</span>]=moc[<span class="hljs-number">99</span>];<br>            &#125;<br>            else if(<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">3</span>])==<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">1</span>]))<br>            &#123;<br>                printf(<span class="hljs-string">&quot;Input Error!\n&quot;</span>);<br>                return <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>        else if(<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">2</span>])==<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">4</span>]))<br>        &#123;<br>            if(<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">5</span>])&gt;<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">3</span>]))<br>            &#123;<br>                moc[<span class="hljs-number">99</span>]=moc[<span class="hljs-number">3</span>];<br>                moc[<span class="hljs-number">3</span>]=moc[<span class="hljs-number">5</span>];<br>                moc[<span class="hljs-number">5</span>]=moc[<span class="hljs-number">99</span>];<br>            &#125;<br>            else if(<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">5</span>])==<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">3</span>]))<br>            &#123;<br>            <span class="hljs-symbol">NOOB</span>:<br>                printf(<span class="hljs-string">&quot;Input Error!\n&quot;</span>);<br>                return <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>        if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">0</span>])&gt;<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">0</span>]))<br>        &#123;<br>            printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>        &#125;<br>        else if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">0</span>])&lt;<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">0</span>]))<br>        &#123;<br>            printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>        &#125;<br>        else<br>        &#123;<br>            if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">1</span>])&gt;<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">1</span>]))<br>                printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>            else if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">1</span>])&lt;<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">1</span>]))<br>                printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>            else<br>            &#123;<br>                if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">5</span>])&gt;<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">5</span>]))<br>                &#123;<br>                    printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>                &#125;<br>                else if(<span class="hljs-symbol">Nb</span>(nob[<span class="hljs-number">5</span>])&lt;<span class="hljs-symbol">Nb</span>(moc[<span class="hljs-number">5</span>]))<br>                &#123;<br>                    printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>                &#125;<br>                else<br>                    printf(<span class="hljs-string">&quot;Winner is X!\n&quot;</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>    else if(bl==<span class="hljs-number">0</span>)<br>    &#123;<br>        printf(<span class="hljs-string">&quot;Input Error!\n&quot;</span>);<br>        return <span class="hljs-number">0</span>;<br>    &#125;<br>    printf(<span class="hljs-string">&quot;A: %c%c %c%c %c%c\n&quot;</span>,nob[<span class="hljs-number">0</span>],nob[<span class="hljs-number">1</span>],nob[<span class="hljs-number">2</span>],nob[<span class="hljs-number">3</span>],nob[<span class="hljs-number">4</span>],nob[<span class="hljs-number">5</span>]);<br>    printf(<span class="hljs-string">&quot;B: %c%c %c%c %c%c\n&quot;</span>,moc[<span class="hljs-number">0</span>],moc[<span class="hljs-number">1</span>],moc[<span class="hljs-number">2</span>],moc[<span class="hljs-number">3</span>],moc[<span class="hljs-number">4</span>],moc[<span class="hljs-number">5</span>]);<br>    return <span class="hljs-number">0</span>;<br>&#125;<br>char <span class="hljs-symbol">Nb</span>(char ch)<br>&#123;<br>    switch(ch)<br>    &#123;<br>        case <span class="hljs-string">&#x27;H&#x27;</span>:<br>            return <span class="hljs-string">&#x27;D&#x27;</span>;<br>        case <span class="hljs-string">&#x27;S&#x27;</span>:<br>            return <span class="hljs-string">&#x27;C&#x27;</span>;<br>        case <span class="hljs-string">&#x27;D&#x27;</span>:<br>            return <span class="hljs-string">&#x27;B&#x27;</span>;<br>        case <span class="hljs-string">&#x27;C&#x27;</span>:<br>            return <span class="hljs-string">&#x27;A&#x27;</span>;<br>        case <span class="hljs-string">&#x27;2&#x27;</span>:<br>            return <span class="hljs-number">2</span>;<br>        case <span class="hljs-string">&#x27;3&#x27;</span>:<br>            return <span class="hljs-number">3</span>;<br>        case <span class="hljs-string">&#x27;4&#x27;</span>:<br>            return <span class="hljs-number">4</span>;<br>        case <span class="hljs-string">&#x27;5&#x27;</span>:<br>            return <span class="hljs-number">5</span>;<br>        case <span class="hljs-string">&#x27;6&#x27;</span>:<br>            return <span class="hljs-number">6</span>;<br>        case <span class="hljs-string">&#x27;7&#x27;</span>:<br>            return <span class="hljs-number">7</span>;<br>        case <span class="hljs-string">&#x27;8&#x27;</span>:<br>            return <span class="hljs-number">8</span>;<br>        case <span class="hljs-string">&#x27;9&#x27;</span>:<br>            return <span class="hljs-number">9</span>;<br>        case <span class="hljs-string">&#x27;10&#x27;</span>:<br>            return <span class="hljs-number">10</span>;<br>        case <span class="hljs-string">&#x27;J&#x27;</span>:<br>            return <span class="hljs-number">11</span>;<br>        case <span class="hljs-string">&#x27;Q&#x27;</span>:<br>            return <span class="hljs-number">12</span>;<br>        case <span class="hljs-string">&#x27;K&#x27;</span>:<br>            return <span class="hljs-number">13</span>;<br>        case <span class="hljs-string">&#x27;A&#x27;</span>:<br>            return <span class="hljs-number">14</span>;<br>        default:<br>        &#123;<br>            bl=<span class="hljs-number">0</span>;<br>            return <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-04-16-BOSS-PRO"><a href="#2024-04-16-BOSS-PRO" class="headerlink" title="2024.04.16 BOSS PRO"></a>2024.04.16 BOSS PRO</h3><figure class="highlight prolog"><table><tr><td class="code"><pre><code class="hljs prolog">#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;stdlib.h&gt;<br>char baka[<span class="hljs-number">6</span>][<span class="hljs-number">10</span>];<br>char *p[<span class="hljs-number">6</span>]=&#123;baka[<span class="hljs-number">0</span>],baka[<span class="hljs-number">1</span>],baka[<span class="hljs-number">2</span>],baka[<span class="hljs-number">3</span>],baka[<span class="hljs-number">4</span>],baka[<span class="hljs-number">5</span>]&#125;;<br>int bl=<span class="hljs-number">1</span>;<br>char <span class="hljs-symbol">Cirno</span> (char);<br>int <span class="hljs-symbol">Mystia</span> (char*);<br>void <span class="hljs-symbol">Daichan</span> (int);<br>void <span class="hljs-symbol">Rumia</span> (int);<br>int <span class="hljs-symbol">Wriggle</span>(int);<br>int <span class="hljs-symbol">Marisa</span>(int);<br>int main(void)<br>&#123;<br>    scanf(<span class="hljs-string">&quot;%s%s%s%s%s%s&quot;</span>,baka[<span class="hljs-number">0</span>],baka[<span class="hljs-number">1</span>],baka[<span class="hljs-number">2</span>],baka[<span class="hljs-number">3</span>],baka[<span class="hljs-number">4</span>],baka[<span class="hljs-number">5</span>]);<br>    //<span class="hljs-symbol">Marisa</span>(<span class="hljs-number">3</span>);<br>    <span class="hljs-symbol">Marisa</span>(<span class="hljs-number">6</span>);<br>    <span class="hljs-symbol">Daichan</span> (<span class="hljs-number">3</span>);<br>    <span class="hljs-symbol">Rumia</span> (<span class="hljs-number">3</span>);<br>    //putchar(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>    <span class="hljs-symbol">Daichan</span> (<span class="hljs-number">6</span>);<br>    <span class="hljs-symbol">Rumia</span> (<span class="hljs-number">6</span>);<br>    if(bl==<span class="hljs-number">1</span>)<br>    &#123;<br>        if(<span class="hljs-symbol">Wriggle</span>(<span class="hljs-number">3</span>)&lt;<span class="hljs-symbol">Wriggle</span>(<span class="hljs-number">6</span>))<br>            printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>        else if(<span class="hljs-symbol">Wriggle</span>(<span class="hljs-number">3</span>)&gt;<span class="hljs-symbol">Wriggle</span>(<span class="hljs-number">6</span>))<br>            printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>        else<br>        &#123;<br>            if(<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])&gt;<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>]))<br>                printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>            else if(<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])&lt;<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>]))<br>                printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>            else<br>            &#123;<br>                if(<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>)&gt;<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">3</span>]+<span class="hljs-number">1</span>))<br>                    printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>                else if(<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>)&lt;<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">3</span>]+<span class="hljs-number">1</span>))<br>                    printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>                else<br>                &#123;<br>                    if(<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>])&gt;<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">4</span>][<span class="hljs-number">0</span>]))<br>                        printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>                    else if(<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>])&lt;<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">4</span>][<span class="hljs-number">0</span>]))<br>                        printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>                    else<br>                    &#123;<br>                        if(<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>)&gt;<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">4</span>]+<span class="hljs-number">1</span>))<br>                            printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>                        else if(<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>)&lt;<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">4</span>]+<span class="hljs-number">1</span>))<br>                            printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>                        else<br>                        &#123;<br>                            if(<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>])&gt;<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">5</span>][<span class="hljs-number">0</span>]))<br>                                printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>                            else if(<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>])&lt;<span class="hljs-symbol">Cirno</span>(p[<span class="hljs-number">5</span>][<span class="hljs-number">0</span>]))<br>                                printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>                            else<br>                            &#123;<br>                                if(<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">2</span>]+<span class="hljs-number">1</span>)&gt;<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">5</span>]+<span class="hljs-number">1</span>))<br>                                    printf(<span class="hljs-string">&quot;Winner is A!\n&quot;</span>);<br>                                else if(<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">2</span>]+<span class="hljs-number">1</span>)&lt;<span class="hljs-symbol">Mystia</span>(p[<span class="hljs-number">5</span>]+<span class="hljs-number">1</span>))<br>                                    printf(<span class="hljs-string">&quot;Winner is B!\n&quot;</span>);<br>                                else<br>                                    printf(<span class="hljs-string">&quot;Draw!\n&quot;</span>);<br>                            &#125;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        printf(<span class="hljs-string">&quot;A: %s %s %s\n&quot;</span>,p[<span class="hljs-number">0</span>],p[<span class="hljs-number">1</span>],p[<span class="hljs-number">2</span>]);<br>        printf(<span class="hljs-string">&quot;B: %s %s %s\n&quot;</span>,p[<span class="hljs-number">3</span>],p[<span class="hljs-number">4</span>],p[<span class="hljs-number">5</span>]);<br>    &#125;<br>    else<br>        printf(<span class="hljs-string">&quot;Input Error!\n&quot;</span>);<br>    return <span class="hljs-number">0</span>;<br>&#125;<br>char <span class="hljs-symbol">Cirno</span> (char q)//杞崲sz澶у皬<br>&#123;<br>    switch(q)<br>    &#123;<br>        case <span class="hljs-string">&#x27;H&#x27;</span>:return <span class="hljs-string">&#x27;D&#x27;</span>;<br>        case <span class="hljs-string">&#x27;S&#x27;</span>:return <span class="hljs-string">&#x27;C&#x27;</span>;<br>        case <span class="hljs-string">&#x27;D&#x27;</span>:return <span class="hljs-string">&#x27;B&#x27;</span>;<br>        case <span class="hljs-string">&#x27;C&#x27;</span>:return <span class="hljs-string">&#x27;A&#x27;</span>;<br>        default:bl=<span class="hljs-number">0</span>;return q;<br>    &#125;<br>&#125;<br>int <span class="hljs-symbol">Mystia</span> (char* x)//杞寲<span class="hljs-symbol">JQKA</span>澶у皬<br>&#123;<br>    int v=atoi(x);<br>    if(v!=<span class="hljs-number">0</span>)<br>    &#123;<br>        switch(v)<br>        &#123;<br>            case <span class="hljs-number">2</span>:case <span class="hljs-number">3</span>:case <span class="hljs-number">4</span>:case <span class="hljs-number">5</span>:case <span class="hljs-number">6</span>:case <span class="hljs-number">7</span>:case <span class="hljs-number">8</span>:case <span class="hljs-number">9</span>:case <span class="hljs-number">10</span>:return v;<br>            default:bl=<span class="hljs-number">0</span>;return v;<br>        &#125;<br>    &#125;<br>    else<br>    &#123;<br>        int w=(int)x[<span class="hljs-number">0</span>];<br>        switch(w)<br>        &#123;<br>            case <span class="hljs-number">74</span>:return <span class="hljs-number">11</span>;<br>            case <span class="hljs-number">81</span>:return <span class="hljs-number">12</span>;<br>            case <span class="hljs-number">75</span>:return <span class="hljs-number">13</span>;<br>            case <span class="hljs-number">65</span>:return <span class="hljs-number">14</span>;<br>            default:bl=<span class="hljs-number">0</span>;return v;<br>        &#125;<br>    &#125;<br>&#125;<br>void <span class="hljs-symbol">Daichan</span> (int z)//鎺掑垪zm椤哄簭<br>&#123;<br>    int i,j;<br>    for(i=z<span class="hljs-number">-3</span>;i&lt;z;i++)<br>    &#123;<br>        for(j=i+<span class="hljs-number">1</span>;j&lt;z;j++)<br>        &#123;<br>            if(<span class="hljs-symbol">Mystia</span>(p[i]+<span class="hljs-number">1</span>)&lt;<span class="hljs-symbol">Mystia</span>(p[j]+<span class="hljs-number">1</span>))<br>            &#123;<br>                //putchar(<span class="hljs-string">&#x27;?&#x27;</span>);<br>                char *r;<br>                r=p[i];<br>                p[i]=p[j];<br>                p[j]=r;<br>            &#125;<br>        &#125;<br>        //printf(<span class="hljs-string">&quot;%s &quot;</span>,p[i]);<br>    &#125;<br>&#125;<br>void <span class="hljs-symbol">Rumia</span> (int y)//鎺掑垪zm椤哄簭<br>&#123;<br>    int k,l;<br>    k=<span class="hljs-number">0</span>;<br>    for(k=y<span class="hljs-number">-3</span>;k&lt;y;k++)<br>    &#123;<br>        for(l=k+<span class="hljs-number">1</span>;l&lt;y;l++)<br>        &#123;<br>            if(<span class="hljs-symbol">Mystia</span>(p[k]+<span class="hljs-number">1</span>)==<span class="hljs-symbol">Mystia</span>(p[l]+<span class="hljs-number">1</span>))<br>            &#123;<br>                if(<span class="hljs-symbol">Cirno</span>(p[k][<span class="hljs-number">0</span>])&lt;<span class="hljs-symbol">Cirno</span>(p[l][<span class="hljs-number">0</span>]))<br>                &#123;<br>                    char *t;<br>                    t=p[k];<br>                    p[k]=p[l];<br>                    p[l]=t;<br>                &#125;<br>            &#125;<br>        &#125;<br>        //printf(<span class="hljs-string">&quot;%s &quot;</span>,p[k]);<br>    &#125;<br>&#125;<br>int <span class="hljs-symbol">Wriggle</span>(int num)//鍒ゆ柇浼樺厛绾?<br>&#123;<br>    int first=<span class="hljs-symbol">Mystia</span>(p[num<span class="hljs-number">-3</span>]+<span class="hljs-number">1</span>);<br>    int second=<span class="hljs-symbol">Mystia</span>(p[num<span class="hljs-number">-2</span>]+<span class="hljs-number">1</span>);<br>    int third=<span class="hljs-symbol">Mystia</span>(p[num<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>);<br>    //printf(<span class="hljs-string">&quot;%d %d %d\n&quot;</span>,first,second,third);<br>    if((p[num<span class="hljs-number">-3</span>][<span class="hljs-number">0</span>]==p[num<span class="hljs-number">-2</span>][<span class="hljs-number">0</span>])&amp;&amp;(p[num<span class="hljs-number">-2</span>][<span class="hljs-number">0</span>]==p[num<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]))<br>    &#123;<br>        if ((first + <span class="hljs-number">1</span> == second &amp;&amp; second + <span class="hljs-number">1</span> == third) || (first - <span class="hljs-number">1</span> == second &amp;&amp; second - <span class="hljs-number">1</span> == third))<br>        &#123;<br>            //printf(<span class="hljs-string">&quot;鍚岃姳椤篭n&quot;</span>);<br>            return <span class="hljs-number">5</span>;<br>        &#125;<br>    &#125;<br>    else if((first==second)&amp;&amp;(second==third))<br>    &#123;<br>        //printf(<span class="hljs-string">&quot;鐐稿脊\n&quot;</span>);<br>        return <span class="hljs-number">4</span>;<br>    &#125;<br>    else if ((first + <span class="hljs-number">1</span> == second &amp;&amp; second + <span class="hljs-number">1</span> == third) || (first - <span class="hljs-number">1</span> == second &amp;&amp; second - <span class="hljs-number">1</span> == third))<br>    &#123;<br>        //printf(<span class="hljs-string">&quot;杩炵墝\n&quot;</span>);<br>        return <span class="hljs-number">3</span>;<br>    &#125;<br>    else if((first==second)||(first==third)||(second==third))<br>    &#123;<br>        //printf(<span class="hljs-string">&quot;瀵瑰瓙\n&quot;</span>);<br>        return <span class="hljs-number">2</span>;<br>    &#125;<br>    else<br>    &#123;<br>        return <span class="hljs-number">1</span>;<br>    &#125;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br>int <span class="hljs-symbol">Marisa</span>(int u)//鍒ゆ柇鏄惁閲嶇墝<br>&#123;<br>    for(int r=<span class="hljs-number">0</span>;r&lt;<span class="hljs-number">3</span>;r++)<br>    &#123;<br>        for(int t=<span class="hljs-number">1</span>;(r+t)&lt;<span class="hljs-number">3</span>;t++)<br>        &#123;<br>            //printf(<span class="hljs-string">&quot;%s %s\n&quot;</span>,p[r],p[r+t]);<br>            if(strcmp(p[r],p[r+t])==<span class="hljs-number">0</span>)<br>            &#123;<br>                //printf(<span class="hljs-string">&quot;瀵瑰瓙\n&quot;</span>);<br>                //printf(<span class="hljs-string">&quot;%s %s\n&quot;</span>,p[r],p[r+t]);<br>                bl=<span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    //printf(<span class="hljs-string">&quot;%s %s\n&quot;</span>,p[<span class="hljs-number">3</span>],p[<span class="hljs-number">4</span>]);<br>    for(int r=<span class="hljs-number">3</span>;r&lt;<span class="hljs-number">6</span>;r++)<br>    &#123;<br>        for(int t=<span class="hljs-number">1</span>;(r+t)&lt;<span class="hljs-number">6</span>;t++)<br>        &#123;<br>            //putchar(<span class="hljs-string">&#x27;?&#x27;</span>);<br>            //printf(<span class="hljs-string">&quot;%s %s\n&quot;</span>,p[r],p[r+t]);<br>            if(strcmp(p[r],p[r+t])==<span class="hljs-number">0</span>)<br>            &#123;<br>                //printf(<span class="hljs-string">&quot;瀵瑰瓙\n&quot;</span>);<br>                //printf(<span class="hljs-string">&quot;%s %s\n&quot;</span>,p[r],p[r+t]);<br>                bl=<span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-02-大家一起做游戏"><a href="#2024-05-02-大家一起做游戏" class="headerlink" title="2024.05.02 大家一起做游戏"></a>2024.05.02 大家一起做游戏</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> kid =<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> num =<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> noob[<span class="hljs-number">1000</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;kid,&amp;num);<br>    <span class="hljs-type">int</span> k=kid;<br>    <span class="hljs-type">int</span> m=<span class="hljs-number">1</span>,n;<br>    <span class="hljs-keyword">if</span>(num==<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The left child is NO %d.\n&quot;</span>,kid);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(k&gt;<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(n=<span class="hljs-number">0</span>;n&lt;kid;n++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(noob[n]!=<span class="hljs-string">&#x27;0&#x27;</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(m==num)<br>                &#123;<br>                    m=<span class="hljs-number">0</span>;<br>                    k--;<br>                &#125;<br>                noob[n]=m<span class="hljs-number">+48</span>;<br>                m++;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;kid;p++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(noob[p]!=<span class="hljs-string">&#x27;0&#x27;</span>)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The left child is NO %d.\n&quot;</span>,p<span class="hljs-number">+1</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-15-机动车尾号"><a href="#2024-05-15-机动车尾号" class="headerlink" title="2024.05.15 机动车尾号"></a>2024.05.15 机动车尾号</h3><figure class="highlight perl"><table><tr><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-keyword">int</span> main (void)<br>&#123;<br>    <span class="hljs-keyword">int</span> <span class="hljs-keyword">y</span>,m,d;<br>    <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;<br>    scanf(<span class="hljs-string">&quot;<span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span>&quot;</span>,&amp;<span class="hljs-keyword">y</span>,&amp;m,&amp;d);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> n=<span class="hljs-keyword">y</span>-<span class="hljs-number">1</span>;n&gt;=<span class="hljs-number">2012</span>;n--)<br>    &#123;<br>        <span class="hljs-keyword">if</span>((n<span class="hljs-variable">%4</span>==<span class="hljs-number">0</span>&amp;&amp;n<span class="hljs-variable">%100</span>!=<span class="hljs-number">0</span>)||n<span class="hljs-variable">%400</span>==<span class="hljs-number">0</span>)<br>            i+=<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">else</span><br>            i++;<br>    &#125;<br>    <span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;<span class="hljs-variable">%d</span>\n&quot;</span>,i);<br>&#125;<br></code></pre></td></tr></table></figure>

<h3 id="2024-05-20-爱刷题的大神-注释损坏"><a href="#2024-05-20-爱刷题的大神-注释损坏" class="headerlink" title="2024.05.20 爱刷题的大神&#x2F;注释损坏"></a>2024.05.20 爱刷题的大神&#x2F;注释损坏</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/*ORZ Cirno BaKa*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">cirno</span><br>&#123;<br>    <span class="hljs-type">int</span> nu,sc;<br>&#125;MAN;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">quick_sort</span><span class="hljs-params">(MAN noob[<span class="hljs-number">100</span>], <span class="hljs-type">int</span> l, <span class="hljs-type">int</span> r)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">char</span> file[<span class="hljs-number">100</span>];<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,file);<br>    FILE *fp=<span class="hljs-literal">NULL</span>;<br>    fp = <span class="hljs-built_in">fopen</span>(file,<span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-type">int</span> num=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">fscanf</span>(fp,<span class="hljs-string">&quot;%d&quot;</span>,&amp;num);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>    &#123;<br>        <span class="hljs-type">int</span> qiz=<span class="hljs-number">0</span>;<br>        <span class="hljs-built_in">fscanf</span>(fp,<span class="hljs-string">&quot;%d&quot;</span>,&amp;qiz);<br>        <span class="hljs-keyword">struct</span> <span class="hljs-title class_">cirno</span> baka[<span class="hljs-number">100</span>];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">0</span>;q&lt;qiz;q++)<br>            <span class="hljs-built_in">fscanf</span>(fp,<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;baka[q].nu,&amp;baka[q].sc);<br>        <span class="hljs-type">int</span> q;<br>        <span class="hljs-keyword">for</span>(q=<span class="hljs-number">0</span>;q&lt;qiz;q++)<br>            <span class="hljs-keyword">if</span>(baka[q].sc&gt;=<span class="hljs-number">100</span>)<br>                <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">if</span>(q==qiz)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;This OJ is too easy for PQ Dashen!\n&quot;</span>);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-built_in">quick_sort</span>(baka,<span class="hljs-number">0</span>,qiz);<br>        <span class="hljs-keyword">for</span>(q=<span class="hljs-number">0</span>;q&lt;qiz;q++)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,baka[q].nu);<br>        <br>        <span class="hljs-keyword">if</span>(n&lt;num<span class="hljs-number">-1</span>)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">fclose</span>(fp);<br>&#125;<br><span class="hljs-comment">//蹇€熸帓搴?</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">quick_sort</span><span class="hljs-params">(MAN noob[<span class="hljs-number">100</span>], <span class="hljs-type">int</span> l, <span class="hljs-type">int</span> r)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (l &lt; r)<br>    &#123;<br>        <span class="hljs-comment">//Swap(s[l], s[(l + r) / 2]); //灏嗕腑闂寸殑杩欎釜鏁板拰绗竴涓暟浜ゆ崲 鍙傝娉?</span><br>        <span class="hljs-type">int</span> i = l, j = r, x = noob[l].sc;<br>        <span class="hljs-keyword">while</span> (i &lt; j)<br>        &#123;<br>            <span class="hljs-keyword">while</span>(i &lt; j &amp;&amp; noob[j].sc &gt;= x) <span class="hljs-comment">// 浠庡彸鍚戝乏鎵剧涓€涓皬浜巟鐨勬暟</span><br>                j--;<br>            <span class="hljs-keyword">if</span>(i &lt; j)<br>                noob[i++].sc = noob[j].sc;<br>            <br>            <span class="hljs-keyword">while</span>(i &lt; j &amp;&amp; noob[i].sc &lt; x) <span class="hljs-comment">// 浠庡乏鍚戝彸鎵剧涓€涓ぇ浜庣瓑浜巟鐨勬暟</span><br>                i++;<br>            <span class="hljs-keyword">if</span>(i &lt; j)<br>                noob[j--].sc = noob[i].sc;<br>        &#125;<br>        noob[i].sc = x;<br>        <span class="hljs-built_in">quick_sort</span>(noob, l, i - <span class="hljs-number">1</span>); <span class="hljs-comment">// 閫掑綊璋冪敤</span><br>        <span class="hljs-built_in">quick_sort</span>(noob, i + <span class="hljs-number">1</span>, r);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-20-不高兴的女朋友-520限定"><a href="#2024-05-20-不高兴的女朋友-520限定" class="headerlink" title="2024.05.20 不高兴的女朋友&#x2F;520限定"></a>2024.05.20 不高兴的女朋友&#x2F;520限定</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">cirno</span><br>    &#123;<br>        <span class="hljs-type">int</span> w,s;<br>    &#125;;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">cirno</span> baka[<span class="hljs-number">7</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">7</span>;n++)<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;baka[n].w,&amp;baka[n].s);<br>    <span class="hljs-type">int</span> max,m,d=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(m=<span class="hljs-number">0</span>,max=<span class="hljs-number">0</span>;m&lt;<span class="hljs-number">7</span>;m++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>((baka[m].w)+(baka[m].s)&gt;max)<br>        &#123;<br>            d=m;<br>            max=(baka[m].w)+(baka[m].s);<br>        &#125;<br>        <span class="hljs-keyword">if</span>(max&lt;<span class="hljs-number">10</span>)<br>            d=<span class="hljs-number">-1</span>;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,d<span class="hljs-number">+1</span>);<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-27-恭喜发财"><a href="#2024-05-27-恭喜发财" class="headerlink" title="2024.05.27 恭喜发财"></a>2024.05.27 恭喜发财</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> num=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;num);<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">cirno</span><br>    &#123;<br>        <span class="hljs-type">char</span> name[<span class="hljs-number">100</span>];<br>        <span class="hljs-type">int</span> mo,give,gi;<br>        <span class="hljs-type">char</span> giname[<span class="hljs-number">100</span>][<span class="hljs-number">100</span>];<br>    &#125;;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">cirno</span> baka[num];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,baka[n].name);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>    &#123;<br>        <span class="hljs-type">char</span> na[<span class="hljs-number">100</span>];<br>        <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,na);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;m&lt;num;m++)<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(na,baka[m].name)==<span class="hljs-number">0</span>)<br>            &#123;<br>                p=m;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;baka[p].mo,&amp;baka[p].give);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> t=<span class="hljs-number">0</span>;t&lt;baka[p].give;t++)<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,baka[p].giname[t]);<br>    &#125;<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(baka[n].give!=<span class="hljs-number">0</span>)<br>            baka[n].gi=baka[n].mo/baka[n].give;<br>        <span class="hljs-keyword">else</span><br>            baka[n].gi=<span class="hljs-number">0</span>;<br>        baka[n].mo=<span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> q=<span class="hljs-number">0</span>;q&lt;baka[n].give;q++)<br>        &#123;<br>            <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;m&lt;num;m++)<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(baka[n].giname[q],baka[m].name)==<span class="hljs-number">0</span>)<br>                &#123;<br>                    p=m;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            baka[p].mo+=baka[n].gi;<br>            <span class="hljs-comment">//baka[n].mo-=baka[n].gi;</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">0</span>;q&lt;num;q++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s %d\n&quot;</span>,baka[q].name,baka[q].mo-(baka[q].give*baka[q].gi));<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-28-拱猪计分"><a href="#2024-05-28-拱猪计分" class="headerlink" title="2024.05.28 拱猪计分"></a>2024.05.28 拱猪计分</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>typedef struct cirno&#123;<br>    int num;<br>    char card[1000][10];<br>&#125;MAN;<br>int <span class="hljs-attribute">bl</span>=0;<br>struct cirno baka[4];<br>int rumia (MAN);<br>int main (void)<br>&#123;<br>    <span class="hljs-keyword">while</span>(!bl)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(int <span class="hljs-attribute">n</span>=0,bl=0;n&lt;4;n++)<br>        &#123;<br>            scanf(<span class="hljs-string">&quot;%d&quot;</span>,&amp;baka[n].num);<br>            <span class="hljs-keyword">if</span>(baka[n].<span class="hljs-attribute">num</span>==0)<br>                bl++;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-attribute">bl</span>==4)<br>                return 0;<br>            <span class="hljs-keyword">for</span>(int <span class="hljs-attribute">m</span>=0;m&lt;baka[n].num;m++)<br>                scanf(<span class="hljs-string">&quot;%s&quot;</span>,baka[n].card[m]);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(int <span class="hljs-attribute">n</span>=0;n&lt;4;n++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(rumia(baka[n])&gt;0)<br>                printf(<span class="hljs-string">&quot;+%d&quot;</span>,rumia(baka[n]));<br>            <span class="hljs-keyword">else</span><br>                printf(<span class="hljs-string">&quot;%d&quot;</span>,rumia(baka[n]));<br>            <span class="hljs-keyword">if</span>(n&lt;3)<br>                printf(<span class="hljs-string">&quot; &quot;</span>);<br>        &#125;<br>        printf(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>&#125;<br>int rumia (MAN noob)<br>&#123;<br>    int <span class="hljs-attribute">red</span>=0,bei=0,zhu=0,yag=0;<br>    int <span class="hljs-attribute">sc</span>=0,b=1;<br>    <span class="hljs-keyword">for</span>(int <span class="hljs-attribute">n</span>=0;n&lt;noob.num;n++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(noob.card[n][0]==<span class="hljs-string">&#x27;H&#x27;</span>)<br>            red++;<br>        <span class="hljs-keyword">if</span>(noob.card[n][0]==<span class="hljs-string">&#x27;C&#x27;</span>&amp;&amp;noob.card[n][1]==<span class="hljs-string">&#x27;1&#x27;</span>&amp;&amp;noob.card[n][2]==<span class="hljs-string">&#x27;0&#x27;</span>)<br>            bei++;<br>        <span class="hljs-keyword">if</span>(noob.card[n][0]==<span class="hljs-string">&#x27;D&#x27;</span>&amp;&amp;noob.card[n][1]==<span class="hljs-string">&#x27;1&#x27;</span>&amp;&amp;noob.card[n][2]==<span class="hljs-string">&#x27;1&#x27;</span>)<br>            yag++;<br>        <span class="hljs-keyword">if</span>(noob.card[n][0]==<span class="hljs-string">&#x27;S&#x27;</span>&amp;&amp;noob.card[n][1]==<span class="hljs-string">&#x27;1&#x27;</span>&amp;&amp;noob.card[n][2]==<span class="hljs-string">&#x27;2&#x27;</span>)<br>            zhu++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-attribute">red</span>==0&amp;&amp;zhu==0&amp;&amp;yag==0&amp;bei==0)<br>        return 0;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-attribute">red</span>==0&amp;&amp;zhu==0&amp;&amp;yag==0&amp;bei==1)<br>        return 50;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-attribute">zhu</span>==1&amp;&amp;yag==1&amp;&amp;red==13)<br>        sc+=500;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-attribute">red</span>==13)<br>        sc+=200;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(int <span class="hljs-attribute">n</span>=0;n&lt;noob.num;n++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(noob.card[n][0]==<span class="hljs-string">&#x27;H&#x27;</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(noob.card[n][2]==<span class="hljs-string">&#x27;\0&#x27;</span>)<br>                &#123;<br>                    switch (noob.card[n][1])<br>                    &#123;<br>                        case <span class="hljs-string">&#x27;1&#x27;</span>:<span class="hljs-attribute">sc-</span>=50;break;<br>                        case <span class="hljs-string">&#x27;2&#x27;</span>:<span class="hljs-attribute">sc-</span>=2;break;<br>                        case <span class="hljs-string">&#x27;3&#x27;</span>:<span class="hljs-attribute">sc-</span>=3;break;<br>                        case <span class="hljs-string">&#x27;4&#x27;</span>:<span class="hljs-attribute">sc-</span>=4;break;<br>                        case <span class="hljs-string">&#x27;5&#x27;</span>:<span class="hljs-attribute">sc-</span>=5;break;<br>                        case <span class="hljs-string">&#x27;6&#x27;</span>:<span class="hljs-attribute">sc-</span>=6;break;<br>                        case <span class="hljs-string">&#x27;7&#x27;</span>:<span class="hljs-attribute">sc-</span>=7;break;<br>                        case <span class="hljs-string">&#x27;8&#x27;</span>:<span class="hljs-attribute">sc-</span>=8;break;<br>                        case <span class="hljs-string">&#x27;9&#x27;</span>:<span class="hljs-attribute">sc-</span>=9;break;<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    switch (noob.card[n][2])<br>                    &#123;<br>                        case <span class="hljs-string">&#x27;0&#x27;</span>:<span class="hljs-attribute">sc-</span>=10;break;<br>                        case <span class="hljs-string">&#x27;1&#x27;</span>:<span class="hljs-attribute">sc-</span>=20;break;<br>                        case <span class="hljs-string">&#x27;2&#x27;</span>:<span class="hljs-attribute">sc-</span>=30;break;<br>                        case <span class="hljs-string">&#x27;3&#x27;</span>:<span class="hljs-attribute">sc-</span>=40;break;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-attribute">zhu</span>==1)<br>        <span class="hljs-attribute">sc-</span>=100;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-attribute">yag</span>==1)<br>        sc+=100;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-attribute">bei</span>==1)<br>        <span class="hljs-attribute">b</span>=2;<br>    return sc<span class="hljs-number">*b</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-19-机智的大师"><a href="#2024-05-19-机智的大师" class="headerlink" title="2024.05.19 机智的大师"></a>2024.05.19 机智的大师</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> num=<span class="hljs-number">0</span>,rp=<span class="hljs-number">0</span>,min=<span class="hljs-number">100000</span>,mi=<span class="hljs-number">-1</span>;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;num,&amp;rp);<br>    <span class="hljs-type">int</span> baka[num];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;baka[n]);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;m&lt;num;m++)<br>    &#123;<br>        mi=<span class="hljs-number">-1</span>;min=<span class="hljs-number">100000</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;num;n++)<br>            <span class="hljs-keyword">if</span>(baka[n]-rp&lt;=min&amp;&amp;baka[n]-rp&gt;=<span class="hljs-number">0</span>)<br>            &#123;<br>                min=baka[n]-rp;<br>                mi=n;<br>            &#125;<br>        <span class="hljs-keyword">if</span>(mi&gt;=<span class="hljs-number">0</span>)<br>        &#123;<br>            rp+=<span class="hljs-number">2</span>;<br>            baka[mi]=<span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;num;p++)<br>                <span class="hljs-keyword">if</span>(baka[p]!=<span class="hljs-number">0</span>)<br>                &#123;<br>                    rp++;<br>                    baka[p]=<span class="hljs-number">0</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,rp);<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-11-安全的密码"><a href="#2024-06-11-安全的密码" class="headerlink" title="2024.06.11 安全的密码"></a>2024.06.11 安全的密码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">cirno</span> <span class="hljs-params">(<span class="hljs-type">char</span>*)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">int</span> num;<br>	<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;num);<br>	<span class="hljs-built_in">getchar</span>();<br>	<span class="hljs-keyword">while</span>(num--&gt;<span class="hljs-number">0</span>)<br>	&#123;<br>		<span class="hljs-type">char</span> baka[<span class="hljs-number">100</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>		<span class="hljs-built_in">gets</span>(baka);<br>		<span class="hljs-keyword">if</span>(<span class="hljs-built_in">strlen</span>(baka)&lt;<span class="hljs-number">6</span>)<br>			<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Not Safe\n&quot;</span>);<br>		<span class="hljs-keyword">else</span><br>			<span class="hljs-built_in">cirno</span>(baka);<br>	&#125;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">cirno</span> <span class="hljs-params">(<span class="hljs-type">char</span>* busu)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">int</span> nu=<span class="hljs-number">0</span>,en=<span class="hljs-number">0</span>,es=<span class="hljs-number">0</span>,caps=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-built_in">strlen</span>(busu);n++)<br>	&#123;<br>		<span class="hljs-keyword">if</span>((busu[n]&gt;=<span class="hljs-string">&#x27;!&#x27;</span>&amp;&amp;busu[n]&lt;=<span class="hljs-string">&#x27;/&#x27;</span>)||(busu[n]&gt;=<span class="hljs-string">&#x27;:&#x27;</span>&amp;&amp;busu[n]&lt;=<span class="hljs-string">&#x27;@&#x27;</span>)||(busu[n]&gt;=<span class="hljs-string">&#x27;[&#x27;</span>&amp;&amp;busu[n]&lt;=<span class="hljs-string">&#x27;`&#x27;</span>)||(busu[n]==<span class="hljs-string">&#x27; &#x27;</span>))<br>			es=<span class="hljs-number">1</span>;<br>		<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(busu[n]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;busu[n]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)<br>			nu=<span class="hljs-number">1</span>;<br>		<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(busu[n]&gt;=<span class="hljs-string">&#x27;a&#x27;</span>&amp;&amp;busu[n]&lt;=<span class="hljs-string">&#x27;z&#x27;</span>)<br>			en=<span class="hljs-number">1</span>;<br>		<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((busu[n]&gt;=<span class="hljs-string">&#x27;A&#x27;</span>&amp;&amp;busu[n]&lt;=<span class="hljs-string">&#x27;Z&#x27;</span>))<br>			caps=<span class="hljs-number">1</span>;<br>	&#125;<br>	<span class="hljs-comment">//printf(&quot;%d %d %d\n&quot;,nu,en,es);</span><br>	<span class="hljs-keyword">if</span>(nu+en+es+caps==<span class="hljs-number">1</span>)<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Not Safe\n&quot;</span>);<br>	<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nu+en+es+caps==<span class="hljs-number">2</span>)<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Medium Safe\n&quot;</span>);<br>	<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nu+en+es+caps&gt;=<span class="hljs-number">3</span>)<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Safe\n&quot;</span>);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-11-全能的战士"><a href="#2024-06-11-全能的战士" class="headerlink" title="2024.06.11 全能的战士"></a>2024.06.11 全能的战士</h3><figure class="highlight perl"><table><tr><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-keyword">int</span> main(void)&#123;<br>	<span class="hljs-keyword">int</span> n,n1,n2,n3,n12,n13,n23;<br>	scanf(<span class="hljs-string">&quot;<span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span>&quot;</span>,&amp;n,&amp;n1,&amp;n2,&amp;n3,&amp;n12,&amp;n13,&amp;n23);<br>	<span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;<span class="hljs-variable">%d</span>\n&quot;</span>,n-(n1+n2+n3-n12-n13-n23));<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-12-凯撒密码"><a href="#2024-06-12-凯撒密码" class="headerlink" title="2024.06.12 凯撒密码"></a>2024.06.12 凯撒密码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">change</span> <span class="hljs-params">(<span class="hljs-type">char</span>*)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">seed</span> <span class="hljs-params">(<span class="hljs-type">int</span>)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">sort</span> <span class="hljs-params">(<span class="hljs-type">int</span>*,<span class="hljs-type">int</span>)</span></span>;<br><span class="hljs-function"><span class="hljs-type">char</span>* <span class="hljs-title">outPut</span><span class="hljs-params">(<span class="hljs-type">char</span>*,<span class="hljs-type">int</span>)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">char</span> Rome[<span class="hljs-number">1000</span>];<br>	<span class="hljs-type">char</span> Txt[<span class="hljs-number">10000</span>];<br>	<span class="hljs-type">int</span> Num[<span class="hljs-number">25</span>];<br>	<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,Rome);<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;<span class="hljs-number">25</span>;p++)<br>		<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;Num[p]);<br>	<span class="hljs-type">int</span> key=<span class="hljs-built_in">sort</span>(Num,<span class="hljs-built_in">seed</span>(<span class="hljs-built_in">change</span>(Rome)));<br>	<span class="hljs-built_in">getchar</span>();<br>	<span class="hljs-built_in">gets</span>(Txt);<br>	<span class="hljs-built_in">puts</span>(<span class="hljs-built_in">outPut</span>(Txt,key));<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">change</span> <span class="hljs-params">(<span class="hljs-type">char</span>* str)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">int</span> pst=<span class="hljs-number">0</span>,now=<span class="hljs-number">0</span>,tmp,tot=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-built_in">strlen</span>(str);n++)<br>	&#123;<br>		<span class="hljs-keyword">switch</span>(str[n])<br>		&#123;<br>			<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;I&#x27;</span>:now=<span class="hljs-number">1</span>;<span class="hljs-keyword">break</span>;<br>			<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;V&#x27;</span>:now=<span class="hljs-number">5</span>;<span class="hljs-keyword">break</span>;<br>			<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;X&#x27;</span>:now=<span class="hljs-number">10</span>;<span class="hljs-keyword">break</span>;<br>			<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;L&#x27;</span>:now=<span class="hljs-number">50</span>;<span class="hljs-keyword">break</span>;<br>			<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;C&#x27;</span>:now=<span class="hljs-number">100</span>;<span class="hljs-keyword">break</span>;<br>			<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;D&#x27;</span>:now=<span class="hljs-number">500</span>;<span class="hljs-keyword">break</span>;<br>			<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;M&#x27;</span>:now=<span class="hljs-number">1000</span>;<span class="hljs-keyword">break</span>;<br>			<span class="hljs-keyword">default</span>:<span class="hljs-keyword">break</span>;<br>		&#125;<br>		tmp=now;<br>		<span class="hljs-keyword">if</span>(pst&lt;now&amp;&amp;pst!=<span class="hljs-number">0</span>)<br>			now=now<span class="hljs-number">-2</span>*pst;<br>		pst=tmp;<br>		tot+=now;<br>	&#125;<br>	<span class="hljs-keyword">return</span> tot;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">seed</span> <span class="hljs-params">(<span class="hljs-type">int</span> s)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>	&#123;<br>		<span class="hljs-type">int</span> sed=<span class="hljs-number">0</span>;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">1</span>;;n*=<span class="hljs-number">10</span>)<br>		&#123;<br>			<span class="hljs-keyword">if</span>(s%n==s)<br>				<span class="hljs-keyword">break</span>;<br>			sed+=s/n%<span class="hljs-number">10</span>;<br>		&#125;<br>		s=sed;<br>		<span class="hljs-keyword">if</span>(sed%<span class="hljs-number">10</span>==sed)<br>			<span class="hljs-keyword">return</span> sed;<br>	&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">sort</span> <span class="hljs-params">(<span class="hljs-type">int</span>* it,<span class="hljs-type">int</span> sed)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">25</span>;i++)<br>	&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">25</span>-i<span class="hljs-number">-1</span>;j++)<br>		&#123;<br>			<span class="hljs-keyword">if</span>(it[j]&gt;it[j<span class="hljs-number">+1</span>])<br>			&#123;<br>				<span class="hljs-type">int</span> tmp=it[j];<br>				it[j]=it[j<span class="hljs-number">+1</span>];<br>				it[j<span class="hljs-number">+1</span>]=tmp;	<br>			&#125;<br>		&#125;<br>	&#125;<br>	<span class="hljs-keyword">return</span> it[sed<span class="hljs-number">-1</span>];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">char</span>* <span class="hljs-title">outPut</span><span class="hljs-params">(<span class="hljs-type">char</span>* txt,<span class="hljs-type">int</span> key)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">int</span> swch=key%<span class="hljs-number">26</span>;<br>	<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,swch);<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-built_in">strlen</span>(txt);n++)<br>	&#123;<br>		<span class="hljs-keyword">if</span>(txt[n]&gt;=<span class="hljs-string">&#x27;a&#x27;</span>&amp;&amp;txt[n]&lt;=<span class="hljs-string">&#x27;z&#x27;</span>)<br>		&#123;<br>			<span class="hljs-keyword">if</span>((<span class="hljs-type">int</span>)txt[n]+swch&gt;<span class="hljs-number">122</span>)<br>				txt[n]+=(swch<span class="hljs-number">-26</span>);<br>			<span class="hljs-keyword">else</span><br>				txt[n]+=swch;<br>		&#125;<br>	&#125;<br>	<span class="hljs-keyword">return</span> txt;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-13-最短路径"><a href="#2024-06-13-最短路径" class="headerlink" title="2024.06.13 最短路径"></a>2024.06.13 最短路径</h3><figure class="highlight perl"><table><tr><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-keyword">int</span> main(void)<br>&#123;<br>	<span class="hljs-keyword">int</span> x1,y1;<br>	<span class="hljs-keyword">int</span> x2,y2;<br>	scanf(<span class="hljs-string">&quot;<span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span> <span class="hljs-variable">%d</span>&quot;</span>,&amp;x2,&amp;y2,&amp;x1,&amp;y1);<br>	<span class="hljs-keyword">if</span>(x1==<span class="hljs-number">0</span>&amp;&amp;x2==<span class="hljs-number">0</span>&amp;&amp;y1==<span class="hljs-number">0</span>&amp;&amp;y2==<span class="hljs-number">0</span>)<br>	&#123;<br>		<span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;1\n(0,0)\n&quot;</span>);<br>		<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>	&#125;<br>	<span class="hljs-keyword">int</span> fst=<span class="hljs-number">0</span>,sec=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">int</span> mid1,mid2;<br>	mid1=(x1-<span class="hljs-number">1</span>)*(y1-<span class="hljs-number">1</span>);<br>	mid2=(x2-x1-<span class="hljs-number">1</span>)*(y2-y1-<span class="hljs-number">1</span>);<br>	<span class="hljs-keyword">if</span>(mid2&lt;<span class="hljs-number">0</span>)<br>		mid2/=-<span class="hljs-number">1</span>;<br>	fst=x1*y1;<br>	sec=(x2-x1)*(y2-y1);<br>	<span class="hljs-keyword">if</span>(sec&lt;<span class="hljs-number">0</span>)<br>		sec/=-<span class="hljs-number">1</span>;<br>	<span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;<span class="hljs-variable">%d</span>\n&quot;</span>,(fst+<span class="hljs-number">1</span>+mid1)*(sec+<span class="hljs-number">1</span>+mid2));<br>	<span class="hljs-keyword">int</span> <span class="hljs-keyword">x</span>=<span class="hljs-number">0</span>,<span class="hljs-keyword">y</span>=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;;n++)<br>	&#123;<br>		<span class="hljs-keyword">if</span>(<span class="hljs-keyword">x</span>==x1&amp;&amp;<span class="hljs-keyword">y</span>==y1)<br>			<span class="hljs-keyword">break</span>;<br>		<span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;(<span class="hljs-variable">%d</span>,<span class="hljs-variable">%d</span>)&quot;</span>,<span class="hljs-keyword">x</span>,<span class="hljs-keyword">y</span>);<br>		<span class="hljs-keyword">if</span>(<span class="hljs-keyword">x</span>==x1)<br>			<span class="hljs-keyword">y</span>++;<br>		<span class="hljs-keyword">else</span><br>			<span class="hljs-keyword">x</span>++;<br>	&#125;<br>	<span class="hljs-keyword">x</span>=x1,<span class="hljs-keyword">y</span>=y1;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;;n++)<br>	&#123;<br>		<span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;(<span class="hljs-variable">%d</span>,<span class="hljs-variable">%d</span>)&quot;</span>,<span class="hljs-keyword">x</span>,<span class="hljs-keyword">y</span>);<br>		<span class="hljs-keyword">if</span>(<span class="hljs-keyword">x</span>==x2&amp;&amp;<span class="hljs-keyword">y</span>==y2)<br>			<span class="hljs-keyword">break</span>;<br>		<span class="hljs-keyword">if</span>(<span class="hljs-keyword">x</span>==x2)<br>			<span class="hljs-keyword">y</span>++;<br>		<span class="hljs-keyword">else</span><br>			<span class="hljs-keyword">x</span>++;<br>	&#125;<br>	<span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-25-大家一起做游戏-小学生"><a href="#2024-06-25-大家一起做游戏-小学生" class="headerlink" title="2024.06.25 大家一起做游戏&#x2F;小学生"></a>2024.06.25 大家一起做游戏&#x2F;小学生</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br>	<span class="hljs-type">char</span> busu[<span class="hljs-number">6</span>];<br>	<span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span> * next;<br>&#125; NODE;<br><br>NODE * head;<br>NODE * end;<br>NODE * mid;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">import</span> <span class="hljs-params">(<span class="hljs-type">char</span> *)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">subtract</span> <span class="hljs-params">(<span class="hljs-type">int</span>)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">int</span> n;<br>	<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>	<span class="hljs-type">int</span> baka[n];<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> m=<span class="hljs-number">0</span>;m&lt;n;m++)<br>		<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;baka[m]);<br>	mid = (NODE *)<span class="hljs-built_in">malloc</span>( <span class="hljs-built_in">sizeof</span>(NODE) );  <br>    mid-&gt;next = <span class="hljs-literal">NULL</span>;  <br>    <span class="hljs-built_in">strcpy</span>(mid-&gt;busu,<span class="hljs-string">&quot;eijuy&quot;</span>);  <br>    <br>    head = (NODE *)<span class="hljs-built_in">malloc</span>( <span class="hljs-built_in">sizeof</span>(NODE) );<br>    head-&gt;next = mid;<br>    <span class="hljs-built_in">strcpy</span>(head-&gt;busu,<span class="hljs-string">&quot;-1&quot;</span>);  <br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;p&lt;n;p++)<br>    &#123;<br>    	<span class="hljs-type">char</span> name[<span class="hljs-number">100</span>];<br>    	<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,name);<br>    	<span class="hljs-built_in">import</span>(name);<br>	&#125;<br><br>	end = (NODE *)<span class="hljs-built_in">malloc</span>( <span class="hljs-built_in">sizeof</span>(NODE) );  <br>	head-&gt;next-&gt;next=end;<br>    end-&gt;next = <span class="hljs-literal">NULL</span>;  <br>    <span class="hljs-built_in">strcpy</span>(end-&gt;busu,<span class="hljs-string">&quot;vrqfb&quot;</span>);<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">0</span>;q&lt;n;q++)<br>    &#123;<br>    	<span class="hljs-type">int</span> flag=<span class="hljs-number">0</span>;<br>    	<span class="hljs-keyword">if</span>(q!=<span class="hljs-number">0</span>)<br>    	&#123;<br>    		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> x=q;x&gt;=<span class="hljs-number">0</span>;x--)<br>    			<span class="hljs-keyword">if</span>(baka[x]&lt;baka[q])<br>    				flag++;<br>    		<span class="hljs-built_in">subtract</span>(baka[q]-flag);<br>    	&#125;<br>    	<span class="hljs-keyword">else</span><br>    		<span class="hljs-built_in">subtract</span>(baka[<span class="hljs-number">0</span>]);<br>	&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">import</span> <span class="hljs-params">(<span class="hljs-type">char</span> *name)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-keyword">while</span>(head-&gt;next!=<span class="hljs-literal">NULL</span>)<br>        head=head-&gt;next;<br>    NODE* p=(NODE*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(NODE));<br>    <span class="hljs-built_in">strcpy</span>(p-&gt;busu,name);<br>    p-&gt;next=<span class="hljs-literal">NULL</span>;<br>    head-&gt;next=p;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">subtract</span> <span class="hljs-params">(<span class="hljs-type">int</span> baka)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">int</span> count=<span class="hljs-number">0</span>;<br>	NODE * p;<br>	NODE * q;<br>	p=mid;<br>	<span class="hljs-keyword">while</span>(count&lt;baka<span class="hljs-number">-1</span>)<br>	&#123;<br>		p = p-&gt;next;<br>		count++;<br>	&#125;<br>	q=p-&gt;next;<br>    p-&gt;next=q-&gt;next;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s %s\n&quot;</span>,p-&gt;busu,q-&gt;next-&gt;busu);<br>    <span class="hljs-built_in">free</span>(q);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-25-开大招"><a href="#2024-06-25-开大招" class="headerlink" title="2024.06.25 开大招"></a>2024.06.25 开大招</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span><span class="hljs-comment">//AWQEWAEQWQEE</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">judge</span> <span class="hljs-params">(<span class="hljs-type">char</span>)</span></span>;<br><span class="hljs-type">int</span> count=<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> Qcd=<span class="hljs-number">0</span>,Wcd=<span class="hljs-number">0</span>,Ecd=<span class="hljs-number">0</span>,Acd=<span class="hljs-number">0</span>;<br><span class="hljs-type">char</span> lst;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">char</span> skill[<span class="hljs-number">1000</span>];<br>	<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,skill);<br>	lst=skill[<span class="hljs-number">0</span>];<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> n=<span class="hljs-number">1</span>;n&lt;<span class="hljs-built_in">strlen</span>(skill);n++)<br>	&#123;<br>		<span class="hljs-built_in">judge</span>(skill[n]);<br>		<span class="hljs-keyword">if</span>(Qcd&gt;<span class="hljs-number">0</span>)<br>			Qcd--;<br>		<span class="hljs-keyword">if</span>(Wcd&gt;<span class="hljs-number">0</span>)<br>			Wcd--;<br>		<span class="hljs-keyword">if</span>(Ecd&gt;<span class="hljs-number">0</span>)<br>			Ecd--;<br>		<span class="hljs-keyword">if</span>(Acd&gt;<span class="hljs-number">0</span>)<br>			Acd--;<br>		<span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-number">6</span>)<br>			<span class="hljs-keyword">break</span>;<br>	&#125;<br>	<span class="hljs-type">char</span> bol;<br>	<span class="hljs-keyword">if</span>(count&gt;<span class="hljs-number">5</span>)<br>		bol=<span class="hljs-string">&#x27;Y&#x27;</span>;<br>	<span class="hljs-keyword">else</span><br>		bol=<span class="hljs-string">&#x27;N&#x27;</span>; <br>	<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %c\n&quot;</span>,count,bol);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">judge</span> <span class="hljs-params">(<span class="hljs-type">char</span> c)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-type">int</span> bl=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">switch</span>(c)<br>	&#123;<br>		<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;Q&#x27;</span>:<br>			<span class="hljs-keyword">if</span>(Qcd==<span class="hljs-number">0</span>)<br>			&#123;<br>				bl=<span class="hljs-number">1</span>;<br>				Qcd+=<span class="hljs-number">2</span>;<br>			&#125;<br>			<span class="hljs-keyword">break</span>;<br>		<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;W&#x27;</span>:<br>			<span class="hljs-keyword">if</span>(Wcd==<span class="hljs-number">0</span>)<br>			&#123;<br>				bl=<span class="hljs-number">1</span>;<br>				Wcd+=<span class="hljs-number">4</span>;<br>			&#125;<br>			<span class="hljs-keyword">break</span>;<br>		<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;E&#x27;</span>:<br>			<span class="hljs-keyword">if</span>(Ecd==<span class="hljs-number">0</span>)<br>			&#123;<br>				bl=<span class="hljs-number">1</span>;<br>				Ecd+=<span class="hljs-number">3</span>;<br>			&#125;<br>			<span class="hljs-keyword">break</span>;<br>		<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;A&#x27;</span>:<br>			<span class="hljs-keyword">if</span>(Acd==<span class="hljs-number">0</span>)<br>			&#123;<br>				bl=<span class="hljs-number">1</span>;<br>				Acd+=<span class="hljs-number">1</span>;<br>			&#125;<br>			<span class="hljs-keyword">break</span>;<br>	&#125;<br>	<span class="hljs-keyword">if</span>(bl==<span class="hljs-number">1</span>)<br>		<span class="hljs-keyword">if</span>(c!=lst)<br>		&#123;<br>			count++;<br>			lst=c;<br>		&#125;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-25-象棋中的马-没做完"><a href="#2024-06-25-象棋中的马-没做完" class="headerlink" title="2024.06.25 象棋中的马&#x2F;没做完"></a>2024.06.25 象棋中的马&#x2F;没做完</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><code class="hljs arduino"><span class="hljs-comment">/* PRESET CODE BEGIN - NEVER TOUCH CODE BELOW */</span>  <br> <br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span>   </span><br><span class="hljs-type">int</span> n,m,x,y,a[<span class="hljs-number">401</span>][<span class="hljs-number">401</span>];  <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y,<span class="hljs-type">int</span> step)</span></span>;  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;  <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);  <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">401</span>;i++)  <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">401</span>;j++)  <br>    a[i][j]=<span class="hljs-number">-1</span>;<span class="hljs-comment">//这里初始化-1 表示为无法到达   </span><br>    <span class="hljs-built_in">dfs</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);  <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;  <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)  <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%5d&quot;</span>,a[i][j]);  <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);  <br>    &#125;  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br><span class="hljs-comment">/* PRESET CODE END - NEVER TOUCH CODE ABOVE */</span> <br>&#125;  <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y,<span class="hljs-type">int</span> step)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-keyword">if</span>(step&gt;n*m)<br>	    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">if</span>(x&gt;m||y&gt;n||x&lt;=<span class="hljs-number">0</span>||y&lt;=<span class="hljs-number">0</span>)<br>		<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">if</span>(a[x][y]&gt;step||a[x][y]==<span class="hljs-number">-1</span>)<br>		a[x][y]=step;<br><br>	<br>	<br>	<span class="hljs-type">int</span> dub=step;<br>	<span class="hljs-built_in">dfs</span>(x<span class="hljs-number">+2</span>,y<span class="hljs-number">+1</span>,++step);<br>	step=dub;<br>	<span class="hljs-built_in">dfs</span>(x<span class="hljs-number">+2</span>,y<span class="hljs-number">-1</span>,++step);<br>	step=dub;<br>	<span class="hljs-built_in">dfs</span>(x<span class="hljs-number">-2</span>,y<span class="hljs-number">+1</span>,++step);<br>	step=dub;<br>	<span class="hljs-built_in">dfs</span>(x<span class="hljs-number">-2</span>,y<span class="hljs-number">-1</span>,++step);<br>	step=dub;<br>	<span class="hljs-built_in">dfs</span>(x<span class="hljs-number">+1</span>,y<span class="hljs-number">+2</span>,++step);<br>	step=dub;<br>	<span class="hljs-built_in">dfs</span>(x<span class="hljs-number">-1</span>,y<span class="hljs-number">+2</span>,++step);<br>	step=dub;<br>	<span class="hljs-built_in">dfs</span>(x<span class="hljs-number">+1</span>,y<span class="hljs-number">-2</span>,++step);<br>	step=dub;<br>	<span class="hljs-built_in">dfs</span>(x<span class="hljs-number">-1</span>,y<span class="hljs-number">-2</span>,++step);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<h2 id="递归题"><a href="#递归题" class="headerlink" title="递归题"></a><strong>递归题</strong></h2><h3 id="2024-05-08-回文字符-递归"><a href="#2024-05-08-回文字符-递归" class="headerlink" title="2024.05.08 回文字符&#x2F;递归"></a>2024.05.08 回文字符&#x2F;递归</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span><span class="hljs-comment">//TENET</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">char</span> baka[<span class="hljs-number">100</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">cirno</span><span class="hljs-params">(<span class="hljs-type">char</span>*,<span class="hljs-type">int</span>)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">gets</span>(baka);<br>    <span class="hljs-built_in">cirno</span>(baka,<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">cirno</span><span class="hljs-params">(<span class="hljs-type">char</span>* busu,<span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>    <br>    <span class="hljs-keyword">if</span>(busu[n]==busu[<span class="hljs-built_in">strlen</span>(busu)-n<span class="hljs-number">-1</span>])<br>    &#123;<br>        <span class="hljs-keyword">if</span>(n==<span class="hljs-built_in">strlen</span>(busu)/<span class="hljs-number">2</span>)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Yes\n&quot;</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-built_in">cirno</span>(busu,n<span class="hljs-number">+1</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;No\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-05-13-迭代求平方根"><a href="#2024-05-13-迭代求平方根" class="headerlink" title="2024.05.13 迭代求平方根"></a>2024.05.13 迭代求平方根</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">double</span> x=<span class="hljs-number">0.0</span>,p=<span class="hljs-number">0.0</span>;<br><span class="hljs-type">float</span> e=<span class="hljs-number">0.0</span>;<br><span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">cirno</span> <span class="hljs-params">(<span class="hljs-type">double</span>)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf %g&quot;</span>,&amp;x,&amp;e);<br>    p=e;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.8lf\n&quot;</span>,<span class="hljs-built_in">cirno</span>(p));<br>&#125;<br><span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">cirno</span><span class="hljs-params">(<span class="hljs-type">double</span> q)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>((q*q-x)*(q*q-x)&lt;(e*e))<br>        <span class="hljs-keyword">return</span> q;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">cirno</span>(<span class="hljs-number">0.5</span>*(q+(x/q)));<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-13-递归函数"><a href="#2024-06-13-递归函数" class="headerlink" title="2024.06.13 递归函数"></a>2024.06.13 递归函数</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/* PRESET CODE BEGIN - NEVER TOUCH CODE BELOW */</span>  <br> <br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">PrintChar</span><span class="hljs-params">(<span class="hljs-type">int</span> number,<span class="hljs-type">char</span> c)</span></span>&#123;  <br>    <span class="hljs-type">int</span> i;  <br>    <span class="hljs-keyword">for</span> ( i=<span class="hljs-number">0</span> ; i&lt; number; i++)  <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,c);  <br>&#125;  <br> <br><span class="hljs-comment">// ????-----------???? </span><br><span class="hljs-function"><span class="hljs-type">char</span> <span class="hljs-title">RecursionFunction</span><span class="hljs-params">(<span class="hljs-type">int</span> n, <span class="hljs-type">char</span> c)</span></span>;  <br>  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;  <br>    <span class="hljs-type">char</span> c; <span class="hljs-type">int</span> n;  <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %c&quot;</span>,&amp;n,&amp;c);  <br>    <span class="hljs-built_in">RecursionFunction</span>(n,c);  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;  <br>  <br><span class="hljs-comment">/* PRESET CODE END - NEVER TOUCH CODE ABOVE */</span>  <br><span class="hljs-function"><span class="hljs-type">char</span> <span class="hljs-title">RecursionFunction</span><span class="hljs-params">(<span class="hljs-type">int</span> n, <span class="hljs-type">char</span> c)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-keyword">if</span>(n&lt;=<span class="hljs-number">0</span>)<br>	&#123;<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>		<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;RecursionFunction has been over !\n&quot;</span>);<br>		<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>	&#125;<br>	<span class="hljs-built_in">PrintChar</span>(n,c);<br>	<span class="hljs-keyword">switch</span>(c)<br>	&#123;<br>		<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;#&#x27;</span>:n-=<span class="hljs-number">1</span>;c=<span class="hljs-string">&#x27;*&#x27;</span>;<span class="hljs-keyword">break</span>;<br>		<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span>:n+=<span class="hljs-number">2</span>;c=<span class="hljs-string">&#x27;?&#x27;</span>;<span class="hljs-keyword">break</span>;<br>		<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;?&#x27;</span>:n+=<span class="hljs-number">3</span>;c=<span class="hljs-string">&#x27;+&#x27;</span>;<span class="hljs-keyword">break</span>;<br>		<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:n-=<span class="hljs-number">6</span>;c=<span class="hljs-string">&#x27;#&#x27;</span>;<span class="hljs-keyword">break</span>;<br>	&#125;<br>	<span class="hljs-built_in">RecursionFunction</span>(n,c);<br>&#125;<br></code></pre></td></tr></table></figure>

<h2 id="链表题"><a href="#链表题" class="headerlink" title="链表题"></a><strong>链表题</strong></h2><h3 id="2024-06-03-交替插入链表"><a href="#2024-06-03-交替插入链表" class="headerlink" title="2024.06.03 交替插入链表"></a>2024.06.03 交替插入链表</h3><figure class="highlight xl"><table><tr><td class="code"><pre><code class="hljs xl"><span class="hljs-comment">/* PRESET CODE BEGIN - NEVER TOUCH CODE BELOW */</span><br> <br>#include <span class="hljs-string">&quot;stdio.h&quot;</span><br>#include <span class="hljs-string">&quot;stdlib.h&quot;</span><br>  <br>struct node<br>&#123;   int <span class="hljs-keyword">data</span>;<br>    struct node * next;<br>&#125; ;<br>  <br>typedef struct node NODE;<br>typedef struct node * PNODE;<br>void outlist( PNODE );<br>void createList(PNODE);<br>void deployList(PNODE head1,PNODE head2,PNODE head3);<br>  <br>int main ( )<br>&#123;   int num=<span class="hljs-number">1</span>;<br>    PNODE head1,head2,head3;<br>  <br>    head1 = (PNODE)malloc( sizeof(NODE) );<br>    <span class="hljs-function"><span class="hljs-title">head1</span>-&gt;</span>next = NULL;<br>    <span class="hljs-function"><span class="hljs-title">head1</span>-&gt;</span><span class="hljs-keyword">data</span> = -<span class="hljs-number">1</span>;<br>      <br>    head2 = (PNODE)malloc( sizeof(NODE) );<br>    <span class="hljs-function"><span class="hljs-title">head2</span>-&gt;</span>next = NULL;<br>    <span class="hljs-function"><span class="hljs-title">head2</span>-&gt;</span><span class="hljs-keyword">data</span> = -<span class="hljs-number">1</span>;<br>  <br>    head3 = (PNODE)malloc( sizeof(NODE) );<br>    <span class="hljs-function"><span class="hljs-title">head3</span>-&gt;</span>next = NULL;<br>    <span class="hljs-function"><span class="hljs-title">head3</span>-&gt;</span><span class="hljs-keyword">data</span> = -<span class="hljs-number">1</span>;<br>  <br>    createList(head1);<span class="hljs-comment">// 杩欐槸浣犺瀹屾垚鐨勫嚱鏁?</span><br>    createList(head2);<span class="hljs-comment">// 杩欐槸浣犺瀹屾垚鐨勫嚱鏁?</span><br>    deployList(head1,head2,head3);<span class="hljs-comment">// 杩欐槸浣犺瀹屾垚鐨勫嚱鏁?</span><br>    outlist( head1 );<br>    return <span class="hljs-number">0</span>;<br>&#125;<br>  <br>void outlist( PNODE head )<br>&#123;   PNODE p;<br>    <span class="hljs-function"><span class="hljs-title">p</span> = head-&gt;</span>next;<br>    <span class="hljs-keyword">while</span> ( p != NULL )<br>    &#123;   <span class="hljs-function"><span class="hljs-title">printf</span>(&quot;%d\n&quot;, p-&gt;</span><span class="hljs-keyword">data</span>);<br>        <span class="hljs-function"><span class="hljs-title">p</span> = p-&gt;</span>next;<br>    &#125;<br>&#125;<br>  <br><span class="hljs-comment">/* PRESET CODE END - NEVER TOUCH CODE ABOVE */</span><br><br>void createList(PNODE head)<br>&#123;<br>    int num;<br>    PNODE p = NULL;<br><br>    scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;num);<br>    <span class="hljs-keyword">while</span> (num != <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-function"><span class="hljs-title">while</span>(head-&gt;</span>next!=NULL)<br>            <span class="hljs-function"><span class="hljs-title">head</span>=head-&gt;</span>next;<br>        p = (PNODE)malloc(sizeof(NODE));<br>        <span class="hljs-function"><span class="hljs-title">p</span>-&gt;</span><span class="hljs-keyword">data</span> = num;<br>        <span class="hljs-function"><span class="hljs-title">p</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">next</span> = head-&gt;</span>next;<br>        <span class="hljs-function"><span class="hljs-title">head</span>-&gt;</span>next = p;<br><br>        scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;num);<br>    &#125;<br>&#125;<br><br>void deployList(PNODE head1, PNODE head2, PNODE head3)<br>&#123;<br>    PNODE <span class="hljs-function"><span class="hljs-title">p1</span> = head1-&gt;</span>next;<br>    PNODE <span class="hljs-function"><span class="hljs-title">p2</span> = head2-&gt;</span>next;<br>    PNODE p3 = head3;<br><br>    <span class="hljs-keyword">while</span> (p1 != NULL &amp;&amp; p2 != NULL)<br>    &#123;<br>        <span class="hljs-function"><span class="hljs-title">p3</span>-&gt;</span>next = p1;<br>        <span class="hljs-function"><span class="hljs-title">p1</span> = p1-&gt;</span>next;<br>        <span class="hljs-function"><span class="hljs-title">p3</span> = p3-&gt;</span>next;<br>        <br>        <span class="hljs-function"><span class="hljs-title">p3</span>-&gt;</span>next = p2;<br>        <span class="hljs-function"><span class="hljs-title">p2</span> = p2-&gt;</span>next;<br>        <span class="hljs-function"><span class="hljs-title">p3</span> = p3-&gt;</span>next;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (p1 != NULL)<br>        <span class="hljs-function"><span class="hljs-title">p3</span>-&gt;</span>next = p1;<br>   <br>    <span class="hljs-keyword">if</span> (p2 != NULL)<br>        <span class="hljs-function"><span class="hljs-title">p3</span>-&gt;</span>next = p2;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-11-链表小数节点"><a href="#2024-06-11-链表小数节点" class="headerlink" title="2024.06.11 链表小数节点"></a>2024.06.11 链表小数节点</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/* PRESET CODE BEGIN - NEVER TOUCH CODE BELOW */</span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> st=<span class="hljs-number">0</span>,ed=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;   <span class="hljs-type">int</span>         data;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span> * next;<br>&#125; NODE;<br>  <br><span class="hljs-function">NODE * <span class="hljs-title">find</span><span class="hljs-params">( NODE * , <span class="hljs-type">int</span> * )</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">outputring</span><span class="hljs-params">( NODE * )</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">change</span><span class="hljs-params">( <span class="hljs-type">int</span> , <span class="hljs-type">int</span> , NODE * )</span></span>;<br>  <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">outputring</span><span class="hljs-params">( NODE * pring )</span></span><br><span class="hljs-function"></span>&#123;<br>    NODE * p;<br>    p = pring;<br>    <span class="hljs-comment">//printf(&quot;ass%d&quot;, p-&gt;data);</span><br>    <span class="hljs-keyword">if</span> ( p == <span class="hljs-literal">NULL</span> )<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NULL&quot;</span>);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">do</span><br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, p-&gt;data);<br>            p = p-&gt;next;<br>            <span class="hljs-keyword">if</span>(p==<span class="hljs-literal">NULL</span>)&#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<span class="hljs-keyword">while</span>(p!= pring);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    <span class="hljs-keyword">return</span>;<br>  <br>&#125;<br>  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;   <span class="hljs-type">int</span> n, m;<br>    NODE * head, * pring;<br>  <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);<br>    head = (NODE *)<span class="hljs-built_in">malloc</span>( <span class="hljs-built_in">sizeof</span>(NODE) );<br>    head-&gt;next = <span class="hljs-literal">NULL</span>;<br>    head-&gt;data = <span class="hljs-number">-1</span>;<br>  <br>    <span class="hljs-built_in">change</span>( n, m, head );<br>    pring = <span class="hljs-built_in">find</span>( head, &amp;n );<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ring=%d\n&quot;</span>, n);<br>    <span class="hljs-built_in">outputring</span>( pring );<br>  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>  <br><span class="hljs-comment">/* Here is waiting for you.</span><br><span class="hljs-comment">void change( int n, int m, NODE * head )</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">NODE * find( NODE * head, int * n )</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">*/</span><br>  <br><span class="hljs-comment">/* PRESET CODE END - NEVER TOUCH CODE ABOVE */</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">change</span><span class="hljs-params">( <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> m, NODE * head )</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> sh[<span class="hljs-number">1000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">int</span> mo[<span class="hljs-number">1000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">int</span> bl=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;;i++)<br>    &#123;<br>        sh[i]=n*<span class="hljs-number">10</span>/m;<br>        mo[i]=n*<span class="hljs-number">10</span>%m;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;i;j++)<br>            <span class="hljs-keyword">if</span>(sh[i]==sh[j]&amp;&amp;mo[i]==mo[j])<br>            &#123;<br>                st=j;<br>                ed=i;<br>                bl=<span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        n=mo[i];<br>        <br>        <br>        <span class="hljs-keyword">if</span>(n==<span class="hljs-number">0</span>)<br>        &#123;<br>            st=i<span class="hljs-number">+1</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(bl!=<span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;st;k++)<br>    &#123;<br>        <span class="hljs-keyword">while</span>(head-&gt;next!=<span class="hljs-literal">NULL</span>)<br>            head=head-&gt;next;<br>        NODE* p=(NODE*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(NODE));<br>        p-&gt;data=sh[k];<br>        p-&gt;next=<span class="hljs-literal">NULL</span>;<br>        head-&gt;next=p;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(bl!=<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=st;k&lt;ed;k++)<br>        &#123;<br>            <span class="hljs-keyword">while</span>(head-&gt;next!=<span class="hljs-literal">NULL</span>)<br>                head=head-&gt;next;<br>            NODE* p=(NODE*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(NODE));<br>            p-&gt;data=sh[k];<br>            p-&gt;next=<span class="hljs-literal">NULL</span>;<br>            head-&gt;next=p;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function">NODE * <span class="hljs-title">find</span><span class="hljs-params">( NODE * head, <span class="hljs-type">int</span> * n )</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(ed&gt;st)<br>    &#123;<br>        *n=ed-st;<br>        NODE* a=head-&gt;next;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;st;k++)<br>            a=a-&gt;next;<br>        <span class="hljs-comment">//printf(&quot;ass%d&quot;,a-&gt;data);</span><br>        <span class="hljs-keyword">return</span> a;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        *n=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="2024-06-12-链表查找"><a href="#2024-06-12-链表查找" class="headerlink" title="2024.06.12 链表查找"></a>2024.06.12 链表查找</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/* PRESET CODE BEGIN - NEVER TOUCH CODE BELOW */</span>  <br>  <br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span>  </span><br>  <br><span class="hljs-type">int</span> st=<span class="hljs-number">0</span>,ed=<span class="hljs-number">0</span>;  <br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span>  <br>&#123;   <span class="hljs-type">int</span>         data;  <br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span> * next;  <br>&#125; NODE;  <br>    <br><span class="hljs-function">NODE * <span class="hljs-title">find</span><span class="hljs-params">( NODE * , <span class="hljs-type">int</span> * )</span></span>;  <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">outputring</span><span class="hljs-params">( NODE * )</span></span>;  <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">change</span><span class="hljs-params">( <span class="hljs-type">int</span> , <span class="hljs-type">int</span> , NODE * )</span></span>;  <br>    <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">outputring</span><span class="hljs-params">( NODE * pring )</span>  </span><br><span class="hljs-function"></span>&#123;  <br>    NODE * p;  <br>    p = pring;  <br>    <span class="hljs-comment">//printf(&quot;ass%d&quot;, p-&gt;data);  </span><br>    <span class="hljs-keyword">if</span> ( p == <span class="hljs-literal">NULL</span> )  <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NULL&quot;</span>);  <br>    <span class="hljs-keyword">else</span>  <br>        <span class="hljs-keyword">do</span>  <br>        &#123;  <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, p-&gt;data);  <br>            p = p-&gt;next;  <br>            <span class="hljs-keyword">if</span>(p==<span class="hljs-literal">NULL</span>)&#123;  <br>                <span class="hljs-keyword">break</span>;  <br>            &#125;  <br>        &#125;<span class="hljs-keyword">while</span>(p!= pring);  <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);  <br>    <span class="hljs-keyword">return</span>;  <br>    <br>&#125;  <br>    <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span>  </span><br><span class="hljs-function"></span>&#123;   <span class="hljs-type">int</span> n, m;  <br>    NODE * head, * pring;  <br>    <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);  <br>    head = (NODE *)<span class="hljs-built_in">malloc</span>( <span class="hljs-built_in">sizeof</span>(NODE) );  <br>    head-&gt;next = <span class="hljs-literal">NULL</span>;  <br>    head-&gt;data = <span class="hljs-number">-1</span>;  <br>    <br>    <span class="hljs-built_in">change</span>( n, m, head );  <br>    pring = <span class="hljs-built_in">find</span>( head, &amp;n );  <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ring=%d\n&quot;</span>, n);  <br>    <span class="hljs-built_in">outputring</span>( pring );  <br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;  <br>    <br><span class="hljs-comment">/* Here is waiting for you. </span><br><span class="hljs-comment">void change( int n, int m, NODE * head ) </span><br><span class="hljs-comment">&#123; </span><br><span class="hljs-comment">&#125; </span><br><span class="hljs-comment">  </span><br><span class="hljs-comment">NODE * find( NODE * head, int * n ) </span><br><span class="hljs-comment">&#123; </span><br><span class="hljs-comment">&#125; </span><br><span class="hljs-comment">*/</span>  <br>    <br><span class="hljs-comment">/* PRESET CODE END - NEVER TOUCH CODE ABOVE */</span>  <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">change</span><span class="hljs-params">( <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> m, NODE * head )</span>  </span><br><span class="hljs-function"></span>&#123;  <br>    <span class="hljs-type">int</span> sh[<span class="hljs-number">1000</span>]=&#123;<span class="hljs-number">0</span>&#125;;  <br>    <span class="hljs-type">int</span> mo[<span class="hljs-number">1000</span>]=&#123;<span class="hljs-number">0</span>&#125;;  <br>    <span class="hljs-type">int</span> bl=<span class="hljs-number">0</span>;  <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;;i++)  <br>    &#123;  <br>        sh[i]=n*<span class="hljs-number">10</span>/m;  <br>        mo[i]=n*<span class="hljs-number">10</span>%m;  <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;i;j++)  <br>            <span class="hljs-keyword">if</span>(sh[i]==sh[j]&amp;&amp;mo[i]==mo[j])  <br>            &#123;  <br>                st=j;  <br>                ed=i;  <br>                bl=<span class="hljs-number">1</span>;  <br>                <span class="hljs-keyword">break</span>;  <br>            &#125;  <br>        n=mo[i];  <br>          <br>          <br>        <span class="hljs-keyword">if</span>(n==<span class="hljs-number">0</span>)  <br>        &#123;  <br>            st=i<span class="hljs-number">+1</span>;  <br>            <span class="hljs-keyword">break</span>;  <br>        &#125;  <br>        <span class="hljs-keyword">if</span>(bl!=<span class="hljs-number">0</span>)  <br>            <span class="hljs-keyword">break</span>;  <br>    &#125;  <br>      <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;st;k++)  <br>    &#123;  <br>        <span class="hljs-keyword">while</span>(head-&gt;next!=<span class="hljs-literal">NULL</span>)  <br>            head=head-&gt;next;  <br>        NODE* p=(NODE*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(NODE));  <br>        p-&gt;data=sh[k];  <br>        p-&gt;next=<span class="hljs-literal">NULL</span>;  <br>        head-&gt;next=p;  <br>    &#125;  <br>    <span class="hljs-keyword">if</span>(bl!=<span class="hljs-number">0</span>)  <br>    &#123;  <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=st;k&lt;ed;k++)  <br>        &#123;  <br>            <span class="hljs-keyword">while</span>(head-&gt;next!=<span class="hljs-literal">NULL</span>)  <br>                head=head-&gt;next;  <br>            NODE* p=(NODE*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(NODE));  <br>            p-&gt;data=sh[k];  <br>            p-&gt;next=<span class="hljs-literal">NULL</span>;  <br>            head-&gt;next=p;  <br>        &#125;  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-function">NODE * <span class="hljs-title">find</span><span class="hljs-params">( NODE * head, <span class="hljs-type">int</span> * n )</span>  </span><br><span class="hljs-function"></span>&#123;  <br>    <span class="hljs-keyword">if</span>(ed&gt;st)  <br>    &#123;  <br>        *n=ed-st;  <br>        NODE* a=head-&gt;next;  <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;st;k++)  <br>            a=a-&gt;next;  <br>        <span class="hljs-comment">//printf(&quot;ass%d&quot;,a-&gt;data);  </span><br>        <span class="hljs-keyword">return</span> a;  <br>    &#125;  <br>    <span class="hljs-keyword">else</span>  <br>    &#123;  <br>        *n=<span class="hljs-number">0</span>;  <br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;  <br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure>

<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h1><h2 id="emm暂无-The-Akina-histroy-goes-on"><a href="#emm暂无-The-Akina-histroy-goes-on" class="headerlink" title="emm暂无,The Akina histroy goes on~"></a>emm暂无,The Akina histroy goes on~</h2>]]></content>
      <categories>
        <category>代码</category>
      </categories>
      <tags>
        <tag>代码</tag>
        <tag>C语言</tag>
        <tag>程序设计</tag>
      </tags>
  </entry>
  <entry>
    <title>【持续更新】资源分享</title>
    <url>/%E5%85%B6%E4%BB%96%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<p><strong>1</strong> C Primer plus第六版编程练习答案 <a href="/download/Cpp.pdf">点击下载</a><br><strong>2</strong> 琪露诺的冰屋（4.1新版本）<a href="https://akinabaka.github.io/%E5%86%B0%E5%B1%8B/">点击跳转</a></p>
]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>资源分享</tag>
      </tags>
  </entry>
  <entry>
    <title>【东方同人游戏】琪露诺的冰屋（已更新4.1版本）</title>
    <url>/%E5%86%B0%E5%B1%8B/</url>
    <content><![CDATA[<p>网盘下载（Win旧版）：<a href="https://pan.quark.cn/s/498b7200a746#/list/share">点击下载</a><br><strong>直接下载</strong><br>Win版:<a href="/download/%E5%86%B0%E5%B1%8BWin4.1.rar">点击下载</a><br>Mac版:<a href="/download/%E5%86%B0%E5%B1%8BMac.rar">点击下载</a><br>2024&#x2F;5&#x2F;18</p>
]]></content>
      <categories>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>游戏</tag>
        <tag>弹幕射击</tag>
      </tags>
  </entry>
  <entry>
    <title>【持续更新】音乐工程/音频分享</title>
    <url>/%E9%9F%B3%E4%B9%90%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<p><strong>1</strong> lunate的flp压缩包 <a href="/download/lunate.zip">点击下载</a><br><strong>2</strong> 夜雀的flp压缩包 <a href="/download/%E9%9B%80.zip">点击下载</a><br>  <a href="/download/Nightbird.mp3">夜雀音频</a><br><strong>3</strong> 东方游戏原曲Midi<a href="https://akinabaka.github.io/%E4%B8%9C%E6%96%B9Midi/">点击跳转</a></p>
]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>资源分享</tag>
      </tags>
  </entry>
</search>
